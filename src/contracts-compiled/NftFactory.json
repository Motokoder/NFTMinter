{
  "contractName": "NftFactory",
  "abi": [
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "address",
          "name": "owner",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "address",
          "name": "contractAddress",
          "type": "address"
        }
      ],
      "name": "CollectionCreated",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "address",
          "name": "owner",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "OwnerWithdrawal",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "previousOwner",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "OwnershipTransferred",
      "type": "event"
    },
    {
      "inputs": [],
      "name": "owner",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function",
      "constant": true
    },
    {
      "inputs": [],
      "name": "renounceOwnership",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "transferOwnership",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "string",
          "name": "name",
          "type": "string"
        },
        {
          "internalType": "string",
          "name": "symbol",
          "type": "string"
        },
        {
          "internalType": "uint256",
          "name": "maxTokens",
          "type": "uint256"
        }
      ],
      "name": "createCollection",
      "outputs": [],
      "stateMutability": "payable",
      "type": "function",
      "payable": true
    },
    {
      "inputs": [],
      "name": "getWallets",
      "outputs": [
        {
          "internalType": "address[]",
          "name": "",
          "type": "address[]"
        }
      ],
      "stateMutability": "view",
      "type": "function",
      "constant": true
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "wallet",
          "type": "address"
        }
      ],
      "name": "getWalletContracts",
      "outputs": [
        {
          "internalType": "address[]",
          "name": "",
          "type": "address[]"
        }
      ],
      "stateMutability": "view",
      "type": "function",
      "constant": true
    },
    {
      "inputs": [],
      "name": "getCurrentPrice",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function",
      "constant": true
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "newPrice",
          "type": "uint256"
        }
      ],
      "name": "updatePrice",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "getBalance",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function",
      "constant": true
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "withdraw",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    }
  ],
  "metadata": "{\"compiler\":{\"version\":\"0.8.0+commit.c7dfd78e\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"contractAddress\",\"type\":\"address\"}],\"name\":\"CollectionCreated\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"OwnerWithdrawal\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"name\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"symbol\",\"type\":\"string\"},{\"internalType\":\"uint256\",\"name\":\"maxTokens\",\"type\":\"uint256\"}],\"name\":\"createCollection\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getBalance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getCurrentPrice\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"wallet\",\"type\":\"address\"}],\"name\":\"getWalletContracts\",\"outputs\":[{\"internalType\":\"address[]\",\"name\":\"\",\"type\":\"address[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getWallets\",\"outputs\":[{\"internalType\":\"address[]\",\"name\":\"\",\"type\":\"address[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"newPrice\",\"type\":\"uint256\"}],\"name\":\"updatePrice\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"withdraw\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner.\"},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"/C/__/NFT/nft-minter/solidity/contracts/NftFactory.sol\":\"NftFactory\"},\"evmVersion\":\"byzantium\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"/C/__/NFT/nft-minter/solidity/contracts/NftCollection.sol\":{\"keccak256\":\"0xebf4f9e8f3f02af2e1433d2401099fc65f3f91fc0ae9c790ce9533caa9d3d62e\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://65821a6a1d54a217d1e1433dc7c462dd1fedaf0bf457f994b52261e84936699b\",\"dweb:/ipfs/QmRC9Uk9wAdsM3ik1saamzkmWvg97X8RHpszWTdgSvTpwG\"]},\"/C/__/NFT/nft-minter/solidity/contracts/NftFactory.sol\":{\"keccak256\":\"0x2c7656cbbda9c42f641fc34f5b5f47599d30ba60e9f8b70c72b98ee3e6670658\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://393950407b8f8c878b2d44c1bdb71211b11b9aab1d8bafcd52c08680cd5bdad9\",\"dweb:/ipfs/QmaPX2Vh2ZN24Lm1gUSuNmyyHdJda6L8wZo7Uhs5SPioGD\"]},\"@openzeppelin/contracts/access/Ownable.sol\":{\"keccak256\":\"0x1cae4f85f114ff17b90414f5da67365b1d00337abb5bce9bf944eb78a2c0673c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://d5ff16b336ce8f906478d5f2eecc6435e00833bdc0b92f6b209cf9e92cb5b2b7\",\"dweb:/ipfs/QmRD1rAZEqQ73C33cdA3QoUyBDMEWnNKNMc6PNkAZWHeQQ\"]},\"@openzeppelin/contracts/token/ERC721/ERC721.sol\":{\"keccak256\":\"0x8d1cabca557cb77d97d801d674f0dacc33659e1430cdd34f91ae5d033fc3d93f\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://379879e94763b61c652f914da987a603fb1fec35645a1d6b8022413cf1c3a467\",\"dweb:/ipfs/QmVkFoHVN6XWztbJDHrWfMCRPV4QsbFGj6QPZYeMjQRfhr\"]},\"@openzeppelin/contracts/token/ERC721/IERC721.sol\":{\"keccak256\":\"0xc1c941ad1e580b4623007305921efe2f26fc7320a4edc226234dd707c658a428\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://473e11d739868e0d9f48254ccf84ba63290d6a2321d59a37b74c244a27f9cad7\",\"dweb:/ipfs/QmUGzDmecP936jzgM7SYyGwR1YgBGsveoHHJTbDfB8jbGF\"]},\"@openzeppelin/contracts/token/ERC721/IERC721Receiver.sol\":{\"keccak256\":\"0x96877bb2eb8ca360e949ee1bd77b47a14e92e42f79897c350f088f87a3c231d4\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://48593d699a4ef6b5bd2efb20d37320e69303fd27d4b59a2b6b8a8e563e608456\",\"dweb:/ipfs/QmdAPS8uLrzPJEeFZyJVkwTtaL3KB9jo9wJm1UcoJP55wT\"]},\"@openzeppelin/contracts/token/ERC721/extensions/ERC721Enumerable.sol\":{\"keccak256\":\"0x3dce5847e70c056ef0f7cf91cb9a0067cf90784794017a45c1211cde7ed1c08c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ba34b5028b6a297467a7364d9af182649dee0611a0f9620ec27ce10647885cad\",\"dweb:/ipfs/QmWhGtHDcAYWA31f3Ze9izeh3SPMRzcFagTUwxExLg3sRc\"]},\"@openzeppelin/contracts/token/ERC721/extensions/IERC721Enumerable.sol\":{\"keccak256\":\"0xccb7e6475afcb1c5cb13b3fbf1329c10b93620a9b66393388066683915271a78\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://df5776161e3226ac31bfb919dfe5f42e173a08293fadb4ffa90ffb55e76869d7\",\"dweb:/ipfs/QmXtKfvWj1v6oha8urbnw4RmjSpmQjZsGGqK5qk5trK4nH\"]},\"@openzeppelin/contracts/token/ERC721/extensions/IERC721Metadata.sol\":{\"keccak256\":\"0xb8d11e77eb1ed34a33720edb551d7d6a6b0eee2bfaa40a7024020e1fdf879b16\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c583283c838cc624a96a69eaa823fa92ac5294ec88d417e266c09ea091e0ae62\",\"dweb:/ipfs/QmNdzitXaFADaxooWpB4WsckkDyr4j6GQRxBjyKXsvEeXv\"]},\"@openzeppelin/contracts/utils/Address.sol\":{\"keccak256\":\"0x069b2631bb5b5193a58ccf7a06266c7361bd2c20095667af4402817605627f45\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6a4c96fafff76deda5697c3c5c98cade6e6e1b178254544c106bf360c079ce4e\",\"dweb:/ipfs/QmXmxubE3jnatFgZuN8ay1VV6hZ8WRmhvUjNpeVjki15HX\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0xf930d2df426bfcfc1f7415be724f04081c96f4fb9ec8d0e3a521c07692dface0\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://fc2bfdea0d2562c76fb3c4cf70a86c6ba25c5a30e8f8515c95aafdf8383f8395\",\"dweb:/ipfs/QmTbFya18786ckJfLYUoWau9jBTKfmWnWm5XSViWvB7PXN\"]},\"@openzeppelin/contracts/utils/Strings.sol\":{\"keccak256\":\"0x456e9b3a2bfe189b5249857f624f4139e59331db518483b456c4e587a20552e0\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://1123c9545decc48a011370ebab4bf53dda98524fa21f9498e68851ba8f0ffc0f\",\"dweb:/ipfs/QmUpgMg8EFDnv87ePKUjXxXpJT3qwHRj9VDNSnRxu7T9sy\"]},\"@openzeppelin/contracts/utils/introspection/ERC165.sol\":{\"keccak256\":\"0x5718c5df9bd67ac68a796961df938821bb5dc0cd4c6118d77e9145afb187409b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://d10e1d9b26042424789246603906ad06143bf9a928f4e99de8b5e3bdc662f549\",\"dweb:/ipfs/Qmejonoaj5MLekPus229rJQHcC6E9dz2xorjHJR84fMfmn\"]},\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0xa28007762d9da9db878dd421960c8cb9a10471f47ab5c1b3309bfe48e9e79ff4\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://796ab6e88af7bf0e78def0f059310c903af6a312b565344e0ff524a0f26e81c6\",\"dweb:/ipfs/QmcsVgLgzWdor3UnAztUkXKNGcysm1MPneWksF72AvnwBx\"]}},\"version\":1}",
  "bytecode": "0x6080604052670de0b6b3a764000060015534801561001c57600080fd5b50600061003064010000000061007f810204565b60008054600160a060020a031916600160a060020a0383169081178255604051929350917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0908290a350610083565b3390565b6130f2806100926000396000f3fe608060405260043610620000bb576000357c010000000000000000000000000000000000000000000000000000000090048063da8cac5a116200007e578063da8cac5a146200016d578063db7a460514620001a1578063eb91d37e14620001b9578063f2fde38b14620001d1578063f3fef3a314620001f657620000bb565b806312065fe014620000c05780634197ed7414620000f0578063715018a614620001095780638d6cc56d14620001215780638da5cb5b1462000146575b600080fd5b348015620000cd57600080fd5b50620000d86200021b565b604051620000e7919062000b83565b60405180910390f35b62000107620001013660046200089e565b62000275565b005b3480156200011657600080fd5b5062000107620003f6565b3480156200012e57600080fd5b5062000107620001403660046200090f565b62000496565b3480156200015357600080fd5b506200015e620004e4565b604051620000e79190620009c5565b3480156200017a57600080fd5b50620001926200018c3660046200084e565b620004f3565b604051620000e7919062000a0c565b348015620001ae57600080fd5b50620001926200056c565b348015620001c657600080fd5b50620000d8620005d0565b348015620001de57600080fd5b5062000107620001f03660046200084e565b620005d6565b3480156200020357600080fd5b50620001076200021536600462000872565b620006b3565b6000620002276200079b565b600160a060020a03166200023a620004e4565b600160a060020a0316146200026f5760405160e560020a62461bcd028152600401620002669062000b4e565b60405180910390fd5b50303190565b6001543410156040516020016200028c9062000976565b60405160208183030381529060405290620002bf5760405160e560020a62461bcd02815260040162000266919062000a5b565b50600083838333604051620002d4906200079f565b620002e3949392919062000a70565b604051809103906000f08015801562000300573d6000803e3d6000fd5b503360009081526003602052604090205490915081901515806200036e57600480546001810182556000919091527f8a35acfbc15ff81a39ae7d344fd709f28e8600b4aa8c65c6b64bfe7fe36bd19b01805473ffffffffffffffffffffffffffffffffffffffff1916331790555b33600081815260036020908152604080832080546001810182559084529190922001805473ffffffffffffffffffffffffffffffffffffffff1916600160a060020a038616179055517f5d0de243db1669e3a7056744cd715c625f0c1c348736c2c2d53d0ddebff1a6c791620003e6918590620009d9565b60405180910390a1505050505050565b620004006200079b565b600160a060020a031662000413620004e4565b600160a060020a0316146200043f5760405160e560020a62461bcd028152600401620002669062000b4e565b60008054604051600160a060020a03909116907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0908390a36000805473ffffffffffffffffffffffffffffffffffffffff19169055565b620004a06200079b565b600160a060020a0316620004b3620004e4565b600160a060020a031614620004df5760405160e560020a62461bcd028152600401620002669062000b4e565b600155565b600054600160a060020a031690565b600160a060020a0381166000908152600360209081526040918290208054835181840281018401909452808452606093928301828280156200055f57602002820191906000526020600020905b8154600160a060020a0316815260019091019060200180831162000540575b505050505090505b919050565b60606004805480602002602001604051908101604052809291908181526020018280548015620005c657602002820191906000526020600020905b8154600160a060020a03168152600190910190602001808311620005a7575b5050505050905090565b60015490565b620005e06200079b565b600160a060020a0316620005f3620004e4565b600160a060020a0316146200061f5760405160e560020a62461bcd028152600401620002669062000b4e565b600160a060020a0381166200064b5760405160e560020a62461bcd028152600401620002669062000aba565b60008054604051600160a060020a03808516939216917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e091a36000805473ffffffffffffffffffffffffffffffffffffffff1916600160a060020a0392909216919091179055565b620006bd6200079b565b600160a060020a0316620006d0620004e4565b600160a060020a031614620006fc5760405160e560020a62461bcd028152600401620002669062000b4e565b3031818111620007235760405160e560020a62461bcd028152600401620002669062000b17565b604051600160a060020a0384169083156108fc029084906000818181858888f193505050501580156200075a573d6000803e3d6000fd5b507fa919fadcfa556a012bab31b15f596ea7ccd397adbf10e15f176db9055ab361c483836040516200078e929190620009f3565b60405180910390a1505050565b3390565b6125018062000bbc83390190565b8035600160a060020a03811681146200056757600080fd5b600082601f830112620007d6578081fd5b813567ffffffffffffffff80821115620007f457620007f462000b8c565b604051601f8301601f1916810160200182811182821017156200081b576200081b62000b8c565b60405282815284830160200186101562000833578384fd5b82602086016020830137918201602001929092529392505050565b60006020828403121562000860578081fd5b6200086b82620007ad565b9392505050565b6000806040838503121562000885578081fd5b6200089083620007ad565b946020939093013593505050565b600080600060608486031215620008b3578081fd5b833567ffffffffffffffff80821115620008cb578283fd5b620008d987838801620007c5565b94506020860135915080821115620008ef578283fd5b50620008fe86828701620007c5565b925050604084013590509250925092565b60006020828403121562000921578081fd5b5035919050565b60008151808452815b818110156200094f5760208185018101518683018201520162000931565b81811115620009615782602083870101525b50601f01601f19169290920160200192915050565b7f54686520707269636520746f20637265617465206120636f6c6c656374696f6e81527f20776173206e6f74206d65742e000000000000000000000000000000000000006020820152602d0190565b600160a060020a0391909116815260200190565b600160a060020a0392831681529116602082015260400190565b600160a060020a03929092168252602082015260400190565b6020808252825182820181905260009190848201906040850190845b8181101562000a4f578351600160a060020a03168352928401929184019160010162000a28565b50909695505050505050565b6000602082526200086b602083018462000928565b60006080825262000a85608083018762000928565b828103602084015262000a99818762000928565b915050836040830152600160a060020a038316606083015295945050505050565b60208082526026908201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160408201527f6464726573730000000000000000000000000000000000000000000000000000606082015260800190565b6020808252601c908201527f616d6f756e742063616e6e6f74206578636565642062616c616e636500000000604082015260600190565b6020808252818101527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572604082015260600190565b90815260200190565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fdfe60806040526000600b553480156200001657600080fd5b5060405162002501380380620025018339810160408190526200003991620002d6565b8351849084906200005290600090602085019062000185565b5080516200006890600190602084019062000185565b5050506000845111620000b2576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401620000a99062000367565b60405180910390fd5b6000835111620000f0576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401620000a9906200039e565b600082116200012d576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401620000a990620003d5565b600b829055600a8054600160a060020a031916600160a060020a0383169081179091556040516000907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0908290a3505050506200048f565b82805462000193906200040a565b90600052602060002090601f016020900481019282620001b7576000855562000202565b82601f10620001d257805160ff191683800117855562000202565b8280016001018555821562000202579182015b8281111562000202578251825591602001919060010190620001e5565b506200021092915062000214565b5090565b5b8082111562000210576000815560010162000215565b600082601f8301126200023c578081fd5b81516001604060020a038082111562000259576200025962000460565b6040516020601f8401601f191682018101838111838210171562000281576200028162000460565b604052838252858401810187101562000298578485fd5b8492505b83831015620002bb57858301810151828401820152918201916200029c565b83831115620002cc57848185840101525b5095945050505050565b60008060008060808587031215620002ec578384fd5b84516001604060020a038082111562000303578586fd5b62000311888389016200022b565b9550602087015191508082111562000327578485fd5b5062000336878288016200022b565b6040870151606088015191955093509050600160a060020a03811681146200035c578182fd5b939692955090935050565b60208082526010908201527f6e616d6520697320726571756972656400000000000000000000000000000000604082015260600190565b60208082526012908201527f73796d626f6c2069732072657175697265640000000000000000000000000000604082015260600190565b6020808252818101527f6d6178546f6b656e73206d7573742062652067726561746572207468616e2030604082015260600190565b6002810460018216806200041f57607f821691505b602082108114156200045a577f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b50919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b612062806200049f6000396000f3fe608060405234801561001057600080fd5b506004361061015f576000357c01000000000000000000000000000000000000000000000000000000009004806370a08231116100d5578063a22cb46511610099578063a22cb465146102a9578063b88d4fde146102bc578063c87b56dd146102cf578063d5abeb01146102e2578063e985e9c5146102ea578063f2fde38b146102fd5761015f565b806370a082311461025e578063715018a6146102715780638462151c146102795780638da5cb5b1461029957806395d89b41146102a15761015f565b806323b872dd1161012757806323b872dd146101ec5780632f745c59146101ff57806333eba49a1461021257806342842e0e146102255780634f6ccce7146102385780636352211e1461024b5761015f565b806301ffc9a71461016457806306fdde031461018d578063081812fc146101a2578063095ea7b3146101c257806318160ddd146101d7575b600080fd5b6101776101723660046116ad565b610310565b60405161018491906118b5565b60405180910390f35b610195610356565b60405161018491906118c0565b6101b56101b036600461172b565b6103e8565b6040516101849190611821565b6101d56101d0366004611684565b610437565b005b6101df6104d5565b6040516101849190611f1e565b6101d56101fa366004611596565b6104db565b6101df61020d366004611684565b610516565b6101d56102203660046116e5565b61056b565b6101d5610233366004611596565b610620565b6101df61024636600461172b565b61063b565b6101b561025936600461172b565b61069c565b6101df61026c366004611543565b6106d4565b6101d561071b565b61028c610287366004611543565b6107b4565b6040516101849190611871565b6101b56108e2565b6101956108f1565b6101d56102b736600461164a565b610900565b6101d56102ca3660046115d1565b6109d1565b6101956102dd36600461172b565b610a13565b6101df610a7b565b6101776102f8366004611564565b610a81565b6101d561030b366004611543565b610aaf565b6000600160e060020a031982167f780e9d6300000000000000000000000000000000000000000000000000000000148061034e575061034e82610b83565b90505b919050565b60606000805461036590611f8e565b80601f016020809104026020016040519081016040528092919081815260200182805461039190611f8e565b80156103de5780601f106103b3576101008083540402835291602001916103de565b820191906000526020600020905b8154815290600101906020018083116103c157829003601f168201915b5050505050905090565b60006103f382610bf5565b61041b5760405160e560020a62461bcd02815260040161041290611c5e565b60405180910390fd5b50600090815260046020526040902054600160a060020a031690565b60006104428261069c565b905080600160a060020a031683600160a060020a031614156104795760405160e560020a62461bcd02815260040161041290611e07565b80600160a060020a031661048b610c12565b600160a060020a031614806104a757506104a7816102f8610c12565b6104c65760405160e560020a62461bcd02815260040161041290611b12565b6104d08383610c16565b505050565b60085490565b6104ec6104e6610c12565b82610c91565b61050b5760405160e560020a62461bcd02815260040161041290611e64565b6104d0838383610d19565b6000610521836106d4565b82106105425760405160e560020a62461bcd028152600401610412906118d3565b50600160a060020a03919091166000908152600660209081526040808320938352929052205490565b610573610c12565b600160a060020a03166105846108e2565b600160a060020a0316146105ad5760405160e560020a62461bcd02815260040161041290611cbb565b600b546105b86104d5565b106105d85760405160e560020a62461bcd02815260040161041290611daa565b60006105e26104d5565b6105ed906001611f33565b6000818152600c602090815260409091208451929350610611929091850190611423565b5061061c3382610e59565b5050565b6104d0838383604051806020016040528060008152506109d1565b60006106456104d5565b82106106665760405160e560020a62461bcd02815260040161041290611ec1565b6008828154811061068a5760e060020a634e487b7102600052603260045260246000fd5b90600052602060002001549050919050565b600081815260026020526040812054600160a060020a03168061034e5760405160e560020a62461bcd02815260040161041290611bcc565b6000600160a060020a0382166106ff5760405160e560020a62461bcd02815260040161041290611b6f565b50600160a060020a031660009081526003602052604090205490565b610723610c12565b600160a060020a03166107346108e2565b600160a060020a03161461075d5760405160e560020a62461bcd02815260040161041290611cbb565b600a54604051600091600160a060020a0316907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0908390a3600a805473ffffffffffffffffffffffffffffffffffffffff19169055565b606060006107c1836106d4565b9050806107de575050604080516000815260208101909152610351565b60008167ffffffffffffffff81111561080a5760e060020a634e487b7102600052604160045260246000fd5b604051908082528060200260200182016040528015610833578160200160208202803683370190505b50905060006108406104d5565b905060005b818110156108d05760006108588261063b565b905060006108658261069c565b905080600160a060020a031688600160a060020a031614156108bb5761088b8884610516565b8584815181106108ae5760e060020a634e487b7102600052603260045260246000fd5b6020026020010181815250505b505080806108c890611fc6565b915050610845565b82945050505050610351565b50919050565b600a54600160a060020a031690565b60606001805461036590611f8e565b610908610c12565b600160a060020a031682600160a060020a0316141561093c5760405160e560020a62461bcd02815260040161041290611a7e565b8060056000610949610c12565b600160a060020a03908116825260208083019390935260409182016000908120918716808252919093529120805460ff19169215159290921790915561098d610c12565b600160a060020a03167f17307eab39ab6107e8899845ad3d59bd9653f200f220920489ca2b5937696c31836040516109c591906118b5565b60405180910390a35050565b6109e26109dc610c12565b83610c91565b610a015760405160e560020a62461bcd02815260040161041290611e64565b610a0d84848484610e73565b50505050565b6060610a1e82610bf5565b610a3d5760405160e560020a62461bcd02815260040161041290611d4d565b610a45610ea9565b6000838152600c60209081526040918290209151610a659392910161176f565b6040516020818303038152906040529050919050565b600b5481565b600160a060020a03918216600090815260056020908152604080832093909416825291909152205460ff1690565b610ab7610c12565b600160a060020a0316610ac86108e2565b600160a060020a031614610af15760405160e560020a62461bcd02815260040161041290611cbb565b600160a060020a038116610b1a5760405160e560020a62461bcd0281526004016104129061198d565b600a54604051600160a060020a038084169216907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e090600090a3600a805473ffffffffffffffffffffffffffffffffffffffff1916600160a060020a0392909216919091179055565b6000600160e060020a031982167f80ac58cd000000000000000000000000000000000000000000000000000000001480610be65750600160e060020a031982167f5b5e139f00000000000000000000000000000000000000000000000000000000145b8061034e575061034e82610ee0565b600090815260026020526040902054600160a060020a0316151590565b3390565b6000818152600460205260409020805473ffffffffffffffffffffffffffffffffffffffff1916600160a060020a0384169081179091558190610c588261069c565b600160a060020a03167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b92560405160405180910390a45050565b6000610c9c82610bf5565b610cbb5760405160e560020a62461bcd02815260040161041290611ab5565b6000610cc68361069c565b905080600160a060020a031684600160a060020a03161480610d01575083600160a060020a0316610cf6846103e8565b600160a060020a0316145b80610d115750610d118185610a81565b949350505050565b82600160a060020a0316610d2c8261069c565b600160a060020a031614610d555760405160e560020a62461bcd02815260040161041290611cf0565b600160a060020a038216610d7e5760405160e560020a62461bcd02815260040161041290611a21565b610d89838383610f12565b610d94600082610c16565b600160a060020a0383166000908152600360205260408120805460019290610dbd908490611f4b565b9091555050600160a060020a0382166000908152600360205260408120805460019290610deb908490611f33565b9091555050600081815260026020526040808220805473ffffffffffffffffffffffffffffffffffffffff1916600160a060020a0386811691821790925591518493918716917fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef91a4505050565b61061c828260405180602001604052806000815250610f9b565b610e7e848484610d19565b610e8a84848484610fd1565b610a0d5760405160e560020a62461bcd02815260040161041290611930565b60408051808201909152601481527f68747470733a2f2f617277656176652e6e65742f000000000000000000000000602082015290565b600160e060020a031981167f01ffc9a70000000000000000000000000000000000000000000000000000000014919050565b610f1d8383836104d0565b600160a060020a038316610f3957610f3481611124565b610f5c565b81600160a060020a031683600160a060020a031614610f5c57610f5c8382611168565b600160a060020a038216610f7857610f7381611205565b6104d0565b82600160a060020a031682600160a060020a0316146104d0576104d082826112e7565b610fa5838361132b565b610fb26000848484610fd1565b6104d05760405160e560020a62461bcd02815260040161041290611930565b6000610fe584600160a060020a031661141d565b156111195783600160a060020a031663150b7a02611001610c12565b8786866040518563ffffffff167c010000000000000000000000000000000000000000000000000000000002815260040161103f9493929190611835565b602060405180830381600087803b15801561105957600080fd5b505af1925050508015611089575060408051601f3d908101601f19168201909252611086918101906116c9565b60015b6110e6573d8080156110b7576040519150601f19603f3d011682016040523d82523d6000602084013e6110bc565b606091505b5080516110de5760405160e560020a62461bcd02815260040161041290611930565b805181602001fd5b600160e060020a0319167f150b7a0200000000000000000000000000000000000000000000000000000000149050610d11565b506001949350505050565b600880546000838152600960205260408120829055600182018355919091527ff3f7a9fe364faab93b216da50a3214154f22a0a2b415b23a84c8169e8b636ee30155565b60006001611175846106d4565b61117f9190611f4b565b6000838152600760205260409020549091508082146111d257600160a060020a03841660009081526006602090815260408083208584528252808320548484528184208190558352600790915290208190555b506000918252600760209081526040808420849055600160a060020a039094168352600681528383209183525290812055565b60085460009061121790600190611f4b565b600083815260096020526040812054600880549394509092849081106112505760e060020a634e487b7102600052603260045260246000fd5b9060005260206000200154905080600883815481106112825760e060020a634e487b7102600052603260045260246000fd5b60009182526020808320909101929092558281526009909152604080822084905585825281205560088054806112cb5760e060020a634e487b7102600052603160045260246000fd5b6001900381819060005260206000200160009055905550505050565b60006112f2836106d4565b600160a060020a039093166000908152600660209081526040808320868452825280832085905593825260079052919091209190915550565b600160a060020a0382166113545760405160e560020a62461bcd02815260040161041290611c29565b61135d81610bf5565b1561137d5760405160e560020a62461bcd028152600401610412906119ea565b61138960008383610f12565b600160a060020a03821660009081526003602052604081208054600192906113b2908490611f33565b9091555050600081815260026020526040808220805473ffffffffffffffffffffffffffffffffffffffff1916600160a060020a03861690811790915590518392907fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef908290a45050565b3b151590565b82805461142f90611f8e565b90600052602060002090601f0160209004810192826114515760008555611497565b82601f1061146a57805160ff1916838001178555611497565b82800160010185558215611497579182015b8281111561149757825182559160200191906001019061147c565b506114a39291506114a7565b5090565b5b808211156114a357600081556001016114a8565b600067ffffffffffffffff808411156114d7576114d7611ffa565b604051601f8501601f1916810160200182811182821017156114fb576114fb611ffa565b60405284815291508183850186101561151357600080fd5b8484602083013760006020868301015250509392505050565b8035600160a060020a038116811461035157600080fd5b600060208284031215611554578081fd5b61155d8261152c565b9392505050565b60008060408385031215611576578081fd5b61157f8361152c565b915061158d6020840161152c565b90509250929050565b6000806000606084860312156115aa578081fd5b6115b38461152c565b92506115c16020850161152c565b9150604084013590509250925092565b600080600080608085870312156115e6578081fd5b6115ef8561152c565b93506115fd6020860161152c565b925060408501359150606085013567ffffffffffffffff81111561161f578182fd5b8501601f8101871361162f578182fd5b61163e878235602084016114bc565b91505092959194509250565b6000806040838503121561165c578182fd5b6116658361152c565b915060208301358015158114611679578182fd5b809150509250929050565b60008060408385031215611696578182fd5b61169f8361152c565b946020939093013593505050565b6000602082840312156116be578081fd5b813561155d81612013565b6000602082840312156116da578081fd5b815161155d81612013565b6000602082840312156116f6578081fd5b813567ffffffffffffffff81111561170c578182fd5b8201601f8101841361171c578182fd5b610d11848235602084016114bc565b60006020828403121561173c578081fd5b5035919050565b6000815180845261175b816020860160208601611f62565b601f01601f19169290920160200192915050565b6000835160206117828285838901611f62565b84549184019183906002810460018083168061179f57607f831692505b8583108114156117c05760e060020a634e487b710288526022600452602488fd5b8080156117d457600181146117e557611811565b60ff19851688528388019550611811565b6117ee8b611f27565b895b858110156118095781548a8201529084019088016117f0565b505083880195505b50939a9950505050505050505050565b600160a060020a0391909116815260200190565b6000600160a060020a038087168352808616602084015250836040830152608060608301526118676080830184611743565b9695505050505050565b6020808252825182820181905260009190848201906040850190845b818110156118a95783518352928401929184019160010161188d565b50909695505050505050565b901515815260200190565b60006020825261155d6020830184611743565b6020808252602b908201527f455243373231456e756d657261626c653a206f776e657220696e646578206f7560408201527f74206f6620626f756e6473000000000000000000000000000000000000000000606082015260800190565b60208082526032908201527f4552433732313a207472616e7366657220746f206e6f6e20455243373231526560408201527f63656976657220696d706c656d656e7465720000000000000000000000000000606082015260800190565b60208082526026908201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160408201527f6464726573730000000000000000000000000000000000000000000000000000606082015260800190565b6020808252601c908201527f4552433732313a20746f6b656e20616c7265616479206d696e74656400000000604082015260600190565b60208082526024908201527f4552433732313a207472616e7366657220746f20746865207a65726f2061646460408201527f7265737300000000000000000000000000000000000000000000000000000000606082015260800190565b60208082526019908201527f4552433732313a20617070726f766520746f2063616c6c657200000000000000604082015260600190565b6020808252602c908201527f4552433732313a206f70657261746f7220717565727920666f72206e6f6e657860408201527f697374656e7420746f6b656e0000000000000000000000000000000000000000606082015260800190565b60208082526038908201527f4552433732313a20617070726f76652063616c6c6572206973206e6f74206f7760408201527f6e6572206e6f7220617070726f76656420666f7220616c6c0000000000000000606082015260800190565b6020808252602a908201527f4552433732313a2062616c616e636520717565727920666f7220746865207a6560408201527f726f206164647265737300000000000000000000000000000000000000000000606082015260800190565b60208082526029908201527f4552433732313a206f776e657220717565727920666f72206e6f6e657869737460408201527f656e7420746f6b656e0000000000000000000000000000000000000000000000606082015260800190565b6020808252818101527f4552433732313a206d696e7420746f20746865207a65726f2061646472657373604082015260600190565b6020808252602c908201527f4552433732313a20617070726f76656420717565727920666f72206e6f6e657860408201527f697374656e7420746f6b656e0000000000000000000000000000000000000000606082015260800190565b6020808252818101527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572604082015260600190565b60208082526029908201527f4552433732313a207472616e73666572206f6620746f6b656e2074686174206960408201527f73206e6f74206f776e0000000000000000000000000000000000000000000000606082015260800190565b6020808252602f908201527f4552433732314d657461646174613a2055524920717565727920666f72206e6f60408201527f6e6578697374656e7420746f6b656e0000000000000000000000000000000000606082015260800190565b60208082526029908201527f546865206d696e7420636f756e74206578636565647320746865206d6178696d60408201527f756d20737570706c790000000000000000000000000000000000000000000000606082015260800190565b60208082526021908201527f4552433732313a20617070726f76616c20746f2063757272656e74206f776e6560408201527f7200000000000000000000000000000000000000000000000000000000000000606082015260800190565b60208082526031908201527f4552433732313a207472616e736665722063616c6c6572206973206e6f74206f60408201527f776e6572206e6f7220617070726f766564000000000000000000000000000000606082015260800190565b6020808252602c908201527f455243373231456e756d657261626c653a20676c6f62616c20696e646578206f60408201527f7574206f6620626f756e64730000000000000000000000000000000000000000606082015260800190565b90815260200190565b60009081526020902090565b60008219821115611f4657611f46611fe1565b500190565b600082821015611f5d57611f5d611fe1565b500390565b60005b83811015611f7d578181015183820152602001611f65565b83811115610a0d5750506000910152565b600281046001821680611fa257607f821691505b602082108114156108dc5760e060020a634e487b7102600052602260045260246000fd5b6000600019821415611fda57611fda611fe1565b5060010190565b60e060020a634e487b7102600052601160045260246000fd5b60e060020a634e487b7102600052604160045260246000fd5b600160e060020a03198116811461202957600080fd5b5056fea2646970667358221220060e525aace3f41eb450213a4b7b302487e6d02228d11a7fd86572d6d793eed764736f6c63430008000033a26469706673582212205b28362f4fec59fef3744d699441780b10737028b9bcf75d3842011a9d435e1164736f6c63430008000033",
  "deployedBytecode": "",
  "immutableReferences": {},
  "generatedSources": [],
  "deployedGeneratedSources": [
    {
      "ast": {
        "nodeType": "YulBlock",
        "src": "0:7338:15",
        "statements": [
          {
            "nodeType": "YulBlock",
            "src": "6:3:15",
            "statements": []
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "65:147:15",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "75:29:15",
                  "value": {
                    "arguments": [
                      {
                        "name": "offset",
                        "nodeType": "YulIdentifier",
                        "src": "97:6:15"
                      }
                    ],
                    "functionName": {
                      "name": "calldataload",
                      "nodeType": "YulIdentifier",
                      "src": "84:12:15"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "84:20:15"
                  },
                  "variableNames": [
                    {
                      "name": "value",
                      "nodeType": "YulIdentifier",
                      "src": "75:5:15"
                    }
                  ]
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "190:16:15",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "199:1:15",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "202:1:15",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "192:6:15"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "192:12:15"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "192:12:15"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "value",
                            "nodeType": "YulIdentifier",
                            "src": "126:5:15"
                          },
                          {
                            "arguments": [
                              {
                                "name": "value",
                                "nodeType": "YulIdentifier",
                                "src": "137:5:15"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "144:42:15",
                                "type": "",
                                "value": "0xffffffffffffffffffffffffffffffffffffffff"
                              }
                            ],
                            "functionName": {
                              "name": "and",
                              "nodeType": "YulIdentifier",
                              "src": "133:3:15"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "133:54:15"
                          }
                        ],
                        "functionName": {
                          "name": "eq",
                          "nodeType": "YulIdentifier",
                          "src": "123:2:15"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "123:65:15"
                      }
                    ],
                    "functionName": {
                      "name": "iszero",
                      "nodeType": "YulIdentifier",
                      "src": "116:6:15"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "116:73:15"
                  },
                  "nodeType": "YulIf",
                  "src": "113:2:15"
                }
              ]
            },
            "name": "abi_decode_t_address",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "offset",
                "nodeType": "YulTypedName",
                "src": "44:6:15",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "55:5:15",
                "type": ""
              }
            ],
            "src": "14:198:15"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "272:658:15",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "321:24:15",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "name": "array",
                              "nodeType": "YulIdentifier",
                              "src": "330:5:15"
                            },
                            {
                              "name": "array",
                              "nodeType": "YulIdentifier",
                              "src": "337:5:15"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "323:6:15"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "323:20:15"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "323:20:15"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "offset",
                                "nodeType": "YulIdentifier",
                                "src": "300:6:15"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "308:4:15",
                                "type": "",
                                "value": "0x1f"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "296:3:15"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "296:17:15"
                          },
                          {
                            "name": "end",
                            "nodeType": "YulIdentifier",
                            "src": "315:3:15"
                          }
                        ],
                        "functionName": {
                          "name": "slt",
                          "nodeType": "YulIdentifier",
                          "src": "292:3:15"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "292:27:15"
                      }
                    ],
                    "functionName": {
                      "name": "iszero",
                      "nodeType": "YulIdentifier",
                      "src": "285:6:15"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "285:35:15"
                  },
                  "nodeType": "YulIf",
                  "src": "282:2:15"
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "354:30:15",
                  "value": {
                    "arguments": [
                      {
                        "name": "offset",
                        "nodeType": "YulIdentifier",
                        "src": "377:6:15"
                      }
                    ],
                    "functionName": {
                      "name": "calldataload",
                      "nodeType": "YulIdentifier",
                      "src": "364:12:15"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "364:20:15"
                  },
                  "variables": [
                    {
                      "name": "_1",
                      "nodeType": "YulTypedName",
                      "src": "358:2:15",
                      "type": ""
                    }
                  ]
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "393:28:15",
                  "value": {
                    "kind": "number",
                    "nodeType": "YulLiteral",
                    "src": "403:18:15",
                    "type": "",
                    "value": "0xffffffffffffffff"
                  },
                  "variables": [
                    {
                      "name": "_2",
                      "nodeType": "YulTypedName",
                      "src": "397:2:15",
                      "type": ""
                    }
                  ]
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "444:22:15",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [],
                          "functionName": {
                            "name": "panic_error_0x41",
                            "nodeType": "YulIdentifier",
                            "src": "446:16:15"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "446:18:15"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "446:18:15"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "name": "_1",
                        "nodeType": "YulIdentifier",
                        "src": "436:2:15"
                      },
                      {
                        "name": "_2",
                        "nodeType": "YulIdentifier",
                        "src": "440:2:15"
                      }
                    ],
                    "functionName": {
                      "name": "gt",
                      "nodeType": "YulIdentifier",
                      "src": "433:2:15"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "433:10:15"
                  },
                  "nodeType": "YulIf",
                  "src": "430:2:15"
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "475:23:15",
                  "value": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "495:2:15",
                        "type": "",
                        "value": "64"
                      }
                    ],
                    "functionName": {
                      "name": "mload",
                      "nodeType": "YulIdentifier",
                      "src": "489:5:15"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "489:9:15"
                  },
                  "variables": [
                    {
                      "name": "memPtr",
                      "nodeType": "YulTypedName",
                      "src": "479:6:15",
                      "type": ""
                    }
                  ]
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "507:69:15",
                  "value": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "memPtr",
                            "nodeType": "YulIdentifier",
                            "src": "533:6:15"
                          },
                          {
                            "arguments": [
                              {
                                "arguments": [
                                  {
                                    "name": "_1",
                                    "nodeType": "YulIdentifier",
                                    "src": "549:2:15"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "553:4:15",
                                    "type": "",
                                    "value": "0x1f"
                                  }
                                ],
                                "functionName": {
                                  "name": "add",
                                  "nodeType": "YulIdentifier",
                                  "src": "545:3:15"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "545:13:15"
                              },
                              {
                                "arguments": [
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "564:2:15",
                                    "type": "",
                                    "value": "31"
                                  }
                                ],
                                "functionName": {
                                  "name": "not",
                                  "nodeType": "YulIdentifier",
                                  "src": "560:3:15"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "560:7:15"
                              }
                            ],
                            "functionName": {
                              "name": "and",
                              "nodeType": "YulIdentifier",
                              "src": "541:3:15"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "541:27:15"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "529:3:15"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "529:40:15"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "571:4:15",
                        "type": "",
                        "value": "0x20"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "525:3:15"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "525:51:15"
                  },
                  "variables": [
                    {
                      "name": "newFreePtr",
                      "nodeType": "YulTypedName",
                      "src": "511:10:15",
                      "type": ""
                    }
                  ]
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "635:22:15",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [],
                          "functionName": {
                            "name": "panic_error_0x41",
                            "nodeType": "YulIdentifier",
                            "src": "637:16:15"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "637:18:15"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "637:18:15"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "newFreePtr",
                            "nodeType": "YulIdentifier",
                            "src": "594:10:15"
                          },
                          {
                            "name": "_2",
                            "nodeType": "YulIdentifier",
                            "src": "606:2:15"
                          }
                        ],
                        "functionName": {
                          "name": "gt",
                          "nodeType": "YulIdentifier",
                          "src": "591:2:15"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "591:18:15"
                      },
                      {
                        "arguments": [
                          {
                            "name": "newFreePtr",
                            "nodeType": "YulIdentifier",
                            "src": "614:10:15"
                          },
                          {
                            "name": "memPtr",
                            "nodeType": "YulIdentifier",
                            "src": "626:6:15"
                          }
                        ],
                        "functionName": {
                          "name": "lt",
                          "nodeType": "YulIdentifier",
                          "src": "611:2:15"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "611:22:15"
                      }
                    ],
                    "functionName": {
                      "name": "or",
                      "nodeType": "YulIdentifier",
                      "src": "588:2:15"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "588:46:15"
                  },
                  "nodeType": "YulIf",
                  "src": "585:2:15"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "673:2:15",
                        "type": "",
                        "value": "64"
                      },
                      {
                        "name": "newFreePtr",
                        "nodeType": "YulIdentifier",
                        "src": "677:10:15"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "666:6:15"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "666:22:15"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "666:22:15"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "memPtr",
                        "nodeType": "YulIdentifier",
                        "src": "704:6:15"
                      },
                      {
                        "name": "_1",
                        "nodeType": "YulIdentifier",
                        "src": "712:2:15"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "697:6:15"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "697:18:15"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "697:18:15"
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "763:24:15",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "name": "array",
                              "nodeType": "YulIdentifier",
                              "src": "772:5:15"
                            },
                            {
                              "name": "array",
                              "nodeType": "YulIdentifier",
                              "src": "779:5:15"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "765:6:15"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "765:20:15"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "765:20:15"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "offset",
                                "nodeType": "YulIdentifier",
                                "src": "738:6:15"
                              },
                              {
                                "name": "_1",
                                "nodeType": "YulIdentifier",
                                "src": "746:2:15"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "734:3:15"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "734:15:15"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "751:4:15",
                            "type": "",
                            "value": "0x20"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "730:3:15"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "730:26:15"
                      },
                      {
                        "name": "end",
                        "nodeType": "YulIdentifier",
                        "src": "758:3:15"
                      }
                    ],
                    "functionName": {
                      "name": "gt",
                      "nodeType": "YulIdentifier",
                      "src": "727:2:15"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "727:35:15"
                  },
                  "nodeType": "YulIf",
                  "src": "724:2:15"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "memPtr",
                            "nodeType": "YulIdentifier",
                            "src": "813:6:15"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "821:4:15",
                            "type": "",
                            "value": "0x20"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "809:3:15"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "809:17:15"
                      },
                      {
                        "arguments": [
                          {
                            "name": "offset",
                            "nodeType": "YulIdentifier",
                            "src": "832:6:15"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "840:4:15",
                            "type": "",
                            "value": "0x20"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "828:3:15"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "828:17:15"
                      },
                      {
                        "name": "_1",
                        "nodeType": "YulIdentifier",
                        "src": "847:2:15"
                      }
                    ],
                    "functionName": {
                      "name": "calldatacopy",
                      "nodeType": "YulIdentifier",
                      "src": "796:12:15"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "796:54:15"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "796:54:15"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "memPtr",
                                "nodeType": "YulIdentifier",
                                "src": "874:6:15"
                              },
                              {
                                "name": "_1",
                                "nodeType": "YulIdentifier",
                                "src": "882:2:15"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "870:3:15"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "870:15:15"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "887:4:15",
                            "type": "",
                            "value": "0x20"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "866:3:15"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "866:26:15"
                      },
                      {
                        "name": "array",
                        "nodeType": "YulIdentifier",
                        "src": "894:5:15"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "859:6:15"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "859:41:15"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "859:41:15"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "909:15:15",
                  "value": {
                    "name": "memPtr",
                    "nodeType": "YulIdentifier",
                    "src": "918:6:15"
                  },
                  "variableNames": [
                    {
                      "name": "array",
                      "nodeType": "YulIdentifier",
                      "src": "909:5:15"
                    }
                  ]
                }
              ]
            },
            "name": "abi_decode_t_string",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "offset",
                "nodeType": "YulTypedName",
                "src": "246:6:15",
                "type": ""
              },
              {
                "name": "end",
                "nodeType": "YulTypedName",
                "src": "254:3:15",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "array",
                "nodeType": "YulTypedName",
                "src": "262:5:15",
                "type": ""
              }
            ],
            "src": "217:713:15"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "1005:128:15",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "1051:26:15",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "name": "value0",
                              "nodeType": "YulIdentifier",
                              "src": "1060:6:15"
                            },
                            {
                              "name": "value0",
                              "nodeType": "YulIdentifier",
                              "src": "1068:6:15"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "1053:6:15"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "1053:22:15"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "1053:22:15"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "1026:7:15"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "1035:9:15"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "1022:3:15"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1022:23:15"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "1047:2:15",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "slt",
                      "nodeType": "YulIdentifier",
                      "src": "1018:3:15"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1018:32:15"
                  },
                  "nodeType": "YulIf",
                  "src": "1015:2:15"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "1086:41:15",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "1117:9:15"
                      }
                    ],
                    "functionName": {
                      "name": "abi_decode_t_address",
                      "nodeType": "YulIdentifier",
                      "src": "1096:20:15"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1096:31:15"
                  },
                  "variableNames": [
                    {
                      "name": "value0",
                      "nodeType": "YulIdentifier",
                      "src": "1086:6:15"
                    }
                  ]
                }
              ]
            },
            "name": "abi_decode_tuple_t_address",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "971:9:15",
                "type": ""
              },
              {
                "name": "dataEnd",
                "nodeType": "YulTypedName",
                "src": "982:7:15",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "994:6:15",
                "type": ""
              }
            ],
            "src": "935:198:15"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "1225:179:15",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "1271:26:15",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "name": "value1",
                              "nodeType": "YulIdentifier",
                              "src": "1280:6:15"
                            },
                            {
                              "name": "value1",
                              "nodeType": "YulIdentifier",
                              "src": "1288:6:15"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "1273:6:15"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "1273:22:15"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "1273:22:15"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "1246:7:15"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "1255:9:15"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "1242:3:15"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1242:23:15"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "1267:2:15",
                        "type": "",
                        "value": "64"
                      }
                    ],
                    "functionName": {
                      "name": "slt",
                      "nodeType": "YulIdentifier",
                      "src": "1238:3:15"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1238:32:15"
                  },
                  "nodeType": "YulIf",
                  "src": "1235:2:15"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "1306:41:15",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "1337:9:15"
                      }
                    ],
                    "functionName": {
                      "name": "abi_decode_t_address",
                      "nodeType": "YulIdentifier",
                      "src": "1316:20:15"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1316:31:15"
                  },
                  "variableNames": [
                    {
                      "name": "value0",
                      "nodeType": "YulIdentifier",
                      "src": "1306:6:15"
                    }
                  ]
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "1356:42:15",
                  "value": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "1383:9:15"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "1394:2:15",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "1379:3:15"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1379:18:15"
                      }
                    ],
                    "functionName": {
                      "name": "calldataload",
                      "nodeType": "YulIdentifier",
                      "src": "1366:12:15"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1366:32:15"
                  },
                  "variableNames": [
                    {
                      "name": "value1",
                      "nodeType": "YulIdentifier",
                      "src": "1356:6:15"
                    }
                  ]
                }
              ]
            },
            "name": "abi_decode_tuple_t_addresst_uint256",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "1183:9:15",
                "type": ""
              },
              {
                "name": "dataEnd",
                "nodeType": "YulTypedName",
                "src": "1194:7:15",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "1206:6:15",
                "type": ""
              },
              {
                "name": "value1",
                "nodeType": "YulTypedName",
                "src": "1214:6:15",
                "type": ""
              }
            ],
            "src": "1138:266:15"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "1533:521:15",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "1579:26:15",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "name": "value2",
                              "nodeType": "YulIdentifier",
                              "src": "1588:6:15"
                            },
                            {
                              "name": "value2",
                              "nodeType": "YulIdentifier",
                              "src": "1596:6:15"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "1581:6:15"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "1581:22:15"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "1581:22:15"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "1554:7:15"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "1563:9:15"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "1550:3:15"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1550:23:15"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "1575:2:15",
                        "type": "",
                        "value": "96"
                      }
                    ],
                    "functionName": {
                      "name": "slt",
                      "nodeType": "YulIdentifier",
                      "src": "1546:3:15"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1546:32:15"
                  },
                  "nodeType": "YulIf",
                  "src": "1543:2:15"
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "1614:37:15",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "1641:9:15"
                      }
                    ],
                    "functionName": {
                      "name": "calldataload",
                      "nodeType": "YulIdentifier",
                      "src": "1628:12:15"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1628:23:15"
                  },
                  "variables": [
                    {
                      "name": "offset",
                      "nodeType": "YulTypedName",
                      "src": "1618:6:15",
                      "type": ""
                    }
                  ]
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "1660:28:15",
                  "value": {
                    "kind": "number",
                    "nodeType": "YulLiteral",
                    "src": "1670:18:15",
                    "type": "",
                    "value": "0xffffffffffffffff"
                  },
                  "variables": [
                    {
                      "name": "_1",
                      "nodeType": "YulTypedName",
                      "src": "1664:2:15",
                      "type": ""
                    }
                  ]
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "1715:26:15",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "name": "value2",
                              "nodeType": "YulIdentifier",
                              "src": "1724:6:15"
                            },
                            {
                              "name": "value2",
                              "nodeType": "YulIdentifier",
                              "src": "1732:6:15"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "1717:6:15"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "1717:22:15"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "1717:22:15"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "name": "offset",
                        "nodeType": "YulIdentifier",
                        "src": "1703:6:15"
                      },
                      {
                        "name": "_1",
                        "nodeType": "YulIdentifier",
                        "src": "1711:2:15"
                      }
                    ],
                    "functionName": {
                      "name": "gt",
                      "nodeType": "YulIdentifier",
                      "src": "1700:2:15"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1700:14:15"
                  },
                  "nodeType": "YulIf",
                  "src": "1697:2:15"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "1750:62:15",
                  "value": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "1784:9:15"
                          },
                          {
                            "name": "offset",
                            "nodeType": "YulIdentifier",
                            "src": "1795:6:15"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "1780:3:15"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1780:22:15"
                      },
                      {
                        "name": "dataEnd",
                        "nodeType": "YulIdentifier",
                        "src": "1804:7:15"
                      }
                    ],
                    "functionName": {
                      "name": "abi_decode_t_string",
                      "nodeType": "YulIdentifier",
                      "src": "1760:19:15"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1760:52:15"
                  },
                  "variableNames": [
                    {
                      "name": "value0",
                      "nodeType": "YulIdentifier",
                      "src": "1750:6:15"
                    }
                  ]
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "1821:48:15",
                  "value": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "1854:9:15"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "1865:2:15",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "1850:3:15"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1850:18:15"
                      }
                    ],
                    "functionName": {
                      "name": "calldataload",
                      "nodeType": "YulIdentifier",
                      "src": "1837:12:15"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1837:32:15"
                  },
                  "variables": [
                    {
                      "name": "offset_1",
                      "nodeType": "YulTypedName",
                      "src": "1825:8:15",
                      "type": ""
                    }
                  ]
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "1898:26:15",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "name": "value2",
                              "nodeType": "YulIdentifier",
                              "src": "1907:6:15"
                            },
                            {
                              "name": "value2",
                              "nodeType": "YulIdentifier",
                              "src": "1915:6:15"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "1900:6:15"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "1900:22:15"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "1900:22:15"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "name": "offset_1",
                        "nodeType": "YulIdentifier",
                        "src": "1884:8:15"
                      },
                      {
                        "name": "_1",
                        "nodeType": "YulIdentifier",
                        "src": "1894:2:15"
                      }
                    ],
                    "functionName": {
                      "name": "gt",
                      "nodeType": "YulIdentifier",
                      "src": "1881:2:15"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1881:16:15"
                  },
                  "nodeType": "YulIf",
                  "src": "1878:2:15"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "1933:64:15",
                  "value": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "1967:9:15"
                          },
                          {
                            "name": "offset_1",
                            "nodeType": "YulIdentifier",
                            "src": "1978:8:15"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "1963:3:15"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1963:24:15"
                      },
                      {
                        "name": "dataEnd",
                        "nodeType": "YulIdentifier",
                        "src": "1989:7:15"
                      }
                    ],
                    "functionName": {
                      "name": "abi_decode_t_string",
                      "nodeType": "YulIdentifier",
                      "src": "1943:19:15"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1943:54:15"
                  },
                  "variableNames": [
                    {
                      "name": "value1",
                      "nodeType": "YulIdentifier",
                      "src": "1933:6:15"
                    }
                  ]
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "2006:42:15",
                  "value": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "2033:9:15"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "2044:2:15",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "2029:3:15"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2029:18:15"
                      }
                    ],
                    "functionName": {
                      "name": "calldataload",
                      "nodeType": "YulIdentifier",
                      "src": "2016:12:15"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2016:32:15"
                  },
                  "variableNames": [
                    {
                      "name": "value2",
                      "nodeType": "YulIdentifier",
                      "src": "2006:6:15"
                    }
                  ]
                }
              ]
            },
            "name": "abi_decode_tuple_t_string_memory_ptrt_string_memory_ptrt_uint256",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "1483:9:15",
                "type": ""
              },
              {
                "name": "dataEnd",
                "nodeType": "YulTypedName",
                "src": "1494:7:15",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "1506:6:15",
                "type": ""
              },
              {
                "name": "value1",
                "nodeType": "YulTypedName",
                "src": "1514:6:15",
                "type": ""
              },
              {
                "name": "value2",
                "nodeType": "YulTypedName",
                "src": "1522:6:15",
                "type": ""
              }
            ],
            "src": "1409:645:15"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "2129:120:15",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "2175:26:15",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "name": "value0",
                              "nodeType": "YulIdentifier",
                              "src": "2184:6:15"
                            },
                            {
                              "name": "value0",
                              "nodeType": "YulIdentifier",
                              "src": "2192:6:15"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "2177:6:15"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "2177:22:15"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "2177:22:15"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "2150:7:15"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "2159:9:15"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "2146:3:15"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2146:23:15"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "2171:2:15",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "slt",
                      "nodeType": "YulIdentifier",
                      "src": "2142:3:15"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2142:32:15"
                  },
                  "nodeType": "YulIf",
                  "src": "2139:2:15"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "2210:33:15",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "2233:9:15"
                      }
                    ],
                    "functionName": {
                      "name": "calldataload",
                      "nodeType": "YulIdentifier",
                      "src": "2220:12:15"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2220:23:15"
                  },
                  "variableNames": [
                    {
                      "name": "value0",
                      "nodeType": "YulIdentifier",
                      "src": "2210:6:15"
                    }
                  ]
                }
              ]
            },
            "name": "abi_decode_tuple_t_uint256",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "2095:9:15",
                "type": ""
              },
              {
                "name": "dataEnd",
                "nodeType": "YulTypedName",
                "src": "2106:7:15",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "2118:6:15",
                "type": ""
              }
            ],
            "src": "2059:190:15"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "2306:426:15",
              "statements": [
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "2316:26:15",
                  "value": {
                    "arguments": [
                      {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "2336:5:15"
                      }
                    ],
                    "functionName": {
                      "name": "mload",
                      "nodeType": "YulIdentifier",
                      "src": "2330:5:15"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2330:12:15"
                  },
                  "variables": [
                    {
                      "name": "length",
                      "nodeType": "YulTypedName",
                      "src": "2320:6:15",
                      "type": ""
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "2358:3:15"
                      },
                      {
                        "name": "length",
                        "nodeType": "YulIdentifier",
                        "src": "2363:6:15"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "2351:6:15"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2351:19:15"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "2351:19:15"
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "2379:12:15",
                  "value": {
                    "name": "end",
                    "nodeType": "YulIdentifier",
                    "src": "2388:3:15"
                  },
                  "variables": [
                    {
                      "name": "i",
                      "nodeType": "YulTypedName",
                      "src": "2383:1:15",
                      "type": ""
                    }
                  ]
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "2452:110:15",
                    "statements": [
                      {
                        "nodeType": "YulVariableDeclaration",
                        "src": "2466:14:15",
                        "value": {
                          "kind": "number",
                          "nodeType": "YulLiteral",
                          "src": "2476:4:15",
                          "type": "",
                          "value": "0x20"
                        },
                        "variables": [
                          {
                            "name": "_1",
                            "nodeType": "YulTypedName",
                            "src": "2470:2:15",
                            "type": ""
                          }
                        ]
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "arguments": [
                                {
                                  "arguments": [
                                    {
                                      "name": "pos",
                                      "nodeType": "YulIdentifier",
                                      "src": "2508:3:15"
                                    },
                                    {
                                      "name": "i",
                                      "nodeType": "YulIdentifier",
                                      "src": "2513:1:15"
                                    }
                                  ],
                                  "functionName": {
                                    "name": "add",
                                    "nodeType": "YulIdentifier",
                                    "src": "2504:3:15"
                                  },
                                  "nodeType": "YulFunctionCall",
                                  "src": "2504:11:15"
                                },
                                {
                                  "name": "_1",
                                  "nodeType": "YulIdentifier",
                                  "src": "2517:2:15"
                                }
                              ],
                              "functionName": {
                                "name": "add",
                                "nodeType": "YulIdentifier",
                                "src": "2500:3:15"
                              },
                              "nodeType": "YulFunctionCall",
                              "src": "2500:20:15"
                            },
                            {
                              "arguments": [
                                {
                                  "arguments": [
                                    {
                                      "arguments": [
                                        {
                                          "name": "value",
                                          "nodeType": "YulIdentifier",
                                          "src": "2536:5:15"
                                        },
                                        {
                                          "name": "i",
                                          "nodeType": "YulIdentifier",
                                          "src": "2543:1:15"
                                        }
                                      ],
                                      "functionName": {
                                        "name": "add",
                                        "nodeType": "YulIdentifier",
                                        "src": "2532:3:15"
                                      },
                                      "nodeType": "YulFunctionCall",
                                      "src": "2532:13:15"
                                    },
                                    {
                                      "name": "_1",
                                      "nodeType": "YulIdentifier",
                                      "src": "2547:2:15"
                                    }
                                  ],
                                  "functionName": {
                                    "name": "add",
                                    "nodeType": "YulIdentifier",
                                    "src": "2528:3:15"
                                  },
                                  "nodeType": "YulFunctionCall",
                                  "src": "2528:22:15"
                                }
                              ],
                              "functionName": {
                                "name": "mload",
                                "nodeType": "YulIdentifier",
                                "src": "2522:5:15"
                              },
                              "nodeType": "YulFunctionCall",
                              "src": "2522:29:15"
                            }
                          ],
                          "functionName": {
                            "name": "mstore",
                            "nodeType": "YulIdentifier",
                            "src": "2493:6:15"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "2493:59:15"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "2493:59:15"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "name": "i",
                        "nodeType": "YulIdentifier",
                        "src": "2411:1:15"
                      },
                      {
                        "name": "length",
                        "nodeType": "YulIdentifier",
                        "src": "2414:6:15"
                      }
                    ],
                    "functionName": {
                      "name": "lt",
                      "nodeType": "YulIdentifier",
                      "src": "2408:2:15"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2408:13:15"
                  },
                  "nodeType": "YulForLoop",
                  "post": {
                    "nodeType": "YulBlock",
                    "src": "2422:21:15",
                    "statements": [
                      {
                        "nodeType": "YulAssignment",
                        "src": "2424:17:15",
                        "value": {
                          "arguments": [
                            {
                              "name": "i",
                              "nodeType": "YulIdentifier",
                              "src": "2433:1:15"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "2436:4:15",
                              "type": "",
                              "value": "0x20"
                            }
                          ],
                          "functionName": {
                            "name": "add",
                            "nodeType": "YulIdentifier",
                            "src": "2429:3:15"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "2429:12:15"
                        },
                        "variableNames": [
                          {
                            "name": "i",
                            "nodeType": "YulIdentifier",
                            "src": "2424:1:15"
                          }
                        ]
                      }
                    ]
                  },
                  "pre": {
                    "nodeType": "YulBlock",
                    "src": "2404:3:15",
                    "statements": []
                  },
                  "src": "2400:162:15"
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "2596:64:15",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "arguments": [
                                {
                                  "arguments": [
                                    {
                                      "name": "pos",
                                      "nodeType": "YulIdentifier",
                                      "src": "2625:3:15"
                                    },
                                    {
                                      "name": "length",
                                      "nodeType": "YulIdentifier",
                                      "src": "2630:6:15"
                                    }
                                  ],
                                  "functionName": {
                                    "name": "add",
                                    "nodeType": "YulIdentifier",
                                    "src": "2621:3:15"
                                  },
                                  "nodeType": "YulFunctionCall",
                                  "src": "2621:16:15"
                                },
                                {
                                  "kind": "number",
                                  "nodeType": "YulLiteral",
                                  "src": "2639:4:15",
                                  "type": "",
                                  "value": "0x20"
                                }
                              ],
                              "functionName": {
                                "name": "add",
                                "nodeType": "YulIdentifier",
                                "src": "2617:3:15"
                              },
                              "nodeType": "YulFunctionCall",
                              "src": "2617:27:15"
                            },
                            {
                              "name": "end",
                              "nodeType": "YulIdentifier",
                              "src": "2646:3:15"
                            }
                          ],
                          "functionName": {
                            "name": "mstore",
                            "nodeType": "YulIdentifier",
                            "src": "2610:6:15"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "2610:40:15"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "2610:40:15"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "name": "i",
                        "nodeType": "YulIdentifier",
                        "src": "2577:1:15"
                      },
                      {
                        "name": "length",
                        "nodeType": "YulIdentifier",
                        "src": "2580:6:15"
                      }
                    ],
                    "functionName": {
                      "name": "gt",
                      "nodeType": "YulIdentifier",
                      "src": "2574:2:15"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2574:13:15"
                  },
                  "nodeType": "YulIf",
                  "src": "2571:2:15"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "2669:57:15",
                  "value": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "pos",
                            "nodeType": "YulIdentifier",
                            "src": "2684:3:15"
                          },
                          {
                            "arguments": [
                              {
                                "arguments": [
                                  {
                                    "name": "length",
                                    "nodeType": "YulIdentifier",
                                    "src": "2697:6:15"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "2705:2:15",
                                    "type": "",
                                    "value": "31"
                                  }
                                ],
                                "functionName": {
                                  "name": "add",
                                  "nodeType": "YulIdentifier",
                                  "src": "2693:3:15"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "2693:15:15"
                              },
                              {
                                "arguments": [
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "2714:2:15",
                                    "type": "",
                                    "value": "31"
                                  }
                                ],
                                "functionName": {
                                  "name": "not",
                                  "nodeType": "YulIdentifier",
                                  "src": "2710:3:15"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "2710:7:15"
                              }
                            ],
                            "functionName": {
                              "name": "and",
                              "nodeType": "YulIdentifier",
                              "src": "2689:3:15"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "2689:29:15"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "2680:3:15"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2680:39:15"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "2721:4:15",
                        "type": "",
                        "value": "0x20"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "2676:3:15"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2676:50:15"
                  },
                  "variableNames": [
                    {
                      "name": "end",
                      "nodeType": "YulIdentifier",
                      "src": "2669:3:15"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_t_string",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "2283:5:15",
                "type": ""
              },
              {
                "name": "pos",
                "nodeType": "YulTypedName",
                "src": "2290:3:15",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "end",
                "nodeType": "YulTypedName",
                "src": "2298:3:15",
                "type": ""
              }
            ],
            "src": "2254:478:15"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "2929:137:15",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "2946:3:15"
                      },
                      {
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "2951:34:15",
                        "type": "",
                        "value": "The price to create a collection"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "2939:6:15"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2939:47:15"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "2939:47:15"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "pos",
                            "nodeType": "YulIdentifier",
                            "src": "3006:3:15"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "3011:2:15",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "3002:3:15"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "3002:12:15"
                      },
                      {
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "3016:15:15",
                        "type": "",
                        "value": " was not met."
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "2995:6:15"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2995:37:15"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "2995:37:15"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "3041:19:15",
                  "value": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "3052:3:15"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "3057:2:15",
                        "type": "",
                        "value": "45"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "3048:3:15"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3048:12:15"
                  },
                  "variableNames": [
                    {
                      "name": "end",
                      "nodeType": "YulIdentifier",
                      "src": "3041:3:15"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_packed_t_stringliteral_593b7312de750c8070ddc6e535aae7177f6d680dbdadb33177976809c71a2df2__to_t_string_memory_ptr__nonPadded_inplace_fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "pos",
                "nodeType": "YulTypedName",
                "src": "2913:3:15",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "end",
                "nodeType": "YulTypedName",
                "src": "2921:3:15",
                "type": ""
              }
            ],
            "src": "2737:329:15"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "3172:125:15",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "3182:26:15",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "3194:9:15"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "3205:2:15",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "3190:3:15"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3190:18:15"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "3182:4:15"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "3224:9:15"
                      },
                      {
                        "arguments": [
                          {
                            "name": "value0",
                            "nodeType": "YulIdentifier",
                            "src": "3239:6:15"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "3247:42:15",
                            "type": "",
                            "value": "0xffffffffffffffffffffffffffffffffffffffff"
                          }
                        ],
                        "functionName": {
                          "name": "and",
                          "nodeType": "YulIdentifier",
                          "src": "3235:3:15"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "3235:55:15"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "3217:6:15"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3217:74:15"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "3217:74:15"
                }
              ]
            },
            "name": "abi_encode_tuple_t_address__to_t_address__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "3141:9:15",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "3152:6:15",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "3163:4:15",
                "type": ""
              }
            ],
            "src": "3071:226:15"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "3431:198:15",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "3441:26:15",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "3453:9:15"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "3464:2:15",
                        "type": "",
                        "value": "64"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "3449:3:15"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3449:18:15"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "3441:4:15"
                    }
                  ]
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "3476:52:15",
                  "value": {
                    "kind": "number",
                    "nodeType": "YulLiteral",
                    "src": "3486:42:15",
                    "type": "",
                    "value": "0xffffffffffffffffffffffffffffffffffffffff"
                  },
                  "variables": [
                    {
                      "name": "_1",
                      "nodeType": "YulTypedName",
                      "src": "3480:2:15",
                      "type": ""
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "3544:9:15"
                      },
                      {
                        "arguments": [
                          {
                            "name": "value0",
                            "nodeType": "YulIdentifier",
                            "src": "3559:6:15"
                          },
                          {
                            "name": "_1",
                            "nodeType": "YulIdentifier",
                            "src": "3567:2:15"
                          }
                        ],
                        "functionName": {
                          "name": "and",
                          "nodeType": "YulIdentifier",
                          "src": "3555:3:15"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "3555:15:15"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "3537:6:15"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3537:34:15"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "3537:34:15"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "3591:9:15"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "3602:2:15",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "3587:3:15"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "3587:18:15"
                      },
                      {
                        "arguments": [
                          {
                            "name": "value1",
                            "nodeType": "YulIdentifier",
                            "src": "3611:6:15"
                          },
                          {
                            "name": "_1",
                            "nodeType": "YulIdentifier",
                            "src": "3619:2:15"
                          }
                        ],
                        "functionName": {
                          "name": "and",
                          "nodeType": "YulIdentifier",
                          "src": "3607:3:15"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "3607:15:15"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "3580:6:15"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3580:43:15"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "3580:43:15"
                }
              ]
            },
            "name": "abi_encode_tuple_t_address_t_address__to_t_address_t_address__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "3392:9:15",
                "type": ""
              },
              {
                "name": "value1",
                "nodeType": "YulTypedName",
                "src": "3403:6:15",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "3411:6:15",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "3422:4:15",
                "type": ""
              }
            ],
            "src": "3302:327:15"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "3763:168:15",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "3773:26:15",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "3785:9:15"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "3796:2:15",
                        "type": "",
                        "value": "64"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "3781:3:15"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3781:18:15"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "3773:4:15"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "3815:9:15"
                      },
                      {
                        "arguments": [
                          {
                            "name": "value0",
                            "nodeType": "YulIdentifier",
                            "src": "3830:6:15"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "3838:42:15",
                            "type": "",
                            "value": "0xffffffffffffffffffffffffffffffffffffffff"
                          }
                        ],
                        "functionName": {
                          "name": "and",
                          "nodeType": "YulIdentifier",
                          "src": "3826:3:15"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "3826:55:15"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "3808:6:15"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3808:74:15"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "3808:74:15"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "3902:9:15"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "3913:2:15",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "3898:3:15"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "3898:18:15"
                      },
                      {
                        "name": "value1",
                        "nodeType": "YulIdentifier",
                        "src": "3918:6:15"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "3891:6:15"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3891:34:15"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "3891:34:15"
                }
              ]
            },
            "name": "abi_encode_tuple_t_address_t_uint256__to_t_address_t_uint256__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "3724:9:15",
                "type": ""
              },
              {
                "name": "value1",
                "nodeType": "YulTypedName",
                "src": "3735:6:15",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "3743:6:15",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "3754:4:15",
                "type": ""
              }
            ],
            "src": "3634:297:15"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "4087:533:15",
              "statements": [
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "4097:12:15",
                  "value": {
                    "kind": "number",
                    "nodeType": "YulLiteral",
                    "src": "4107:2:15",
                    "type": "",
                    "value": "32"
                  },
                  "variables": [
                    {
                      "name": "_1",
                      "nodeType": "YulTypedName",
                      "src": "4101:2:15",
                      "type": ""
                    }
                  ]
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "4118:32:15",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "4136:9:15"
                      },
                      {
                        "name": "_1",
                        "nodeType": "YulIdentifier",
                        "src": "4147:2:15"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "4132:3:15"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4132:18:15"
                  },
                  "variables": [
                    {
                      "name": "tail_1",
                      "nodeType": "YulTypedName",
                      "src": "4122:6:15",
                      "type": ""
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "4166:9:15"
                      },
                      {
                        "name": "_1",
                        "nodeType": "YulIdentifier",
                        "src": "4177:2:15"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "4159:6:15"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4159:21:15"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "4159:21:15"
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "4189:17:15",
                  "value": {
                    "name": "tail_1",
                    "nodeType": "YulIdentifier",
                    "src": "4200:6:15"
                  },
                  "variables": [
                    {
                      "name": "pos",
                      "nodeType": "YulTypedName",
                      "src": "4193:3:15",
                      "type": ""
                    }
                  ]
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "4215:27:15",
                  "value": {
                    "arguments": [
                      {
                        "name": "value0",
                        "nodeType": "YulIdentifier",
                        "src": "4235:6:15"
                      }
                    ],
                    "functionName": {
                      "name": "mload",
                      "nodeType": "YulIdentifier",
                      "src": "4229:5:15"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4229:13:15"
                  },
                  "variables": [
                    {
                      "name": "length",
                      "nodeType": "YulTypedName",
                      "src": "4219:6:15",
                      "type": ""
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "tail_1",
                        "nodeType": "YulIdentifier",
                        "src": "4258:6:15"
                      },
                      {
                        "name": "length",
                        "nodeType": "YulIdentifier",
                        "src": "4266:6:15"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "4251:6:15"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4251:22:15"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "4251:22:15"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "4282:25:15",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "4293:9:15"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "4304:2:15",
                        "type": "",
                        "value": "64"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "4289:3:15"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4289:18:15"
                  },
                  "variableNames": [
                    {
                      "name": "pos",
                      "nodeType": "YulIdentifier",
                      "src": "4282:3:15"
                    }
                  ]
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "4316:29:15",
                  "value": {
                    "arguments": [
                      {
                        "name": "value0",
                        "nodeType": "YulIdentifier",
                        "src": "4334:6:15"
                      },
                      {
                        "name": "_1",
                        "nodeType": "YulIdentifier",
                        "src": "4342:2:15"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "4330:3:15"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4330:15:15"
                  },
                  "variables": [
                    {
                      "name": "srcPtr",
                      "nodeType": "YulTypedName",
                      "src": "4320:6:15",
                      "type": ""
                    }
                  ]
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "4354:13:15",
                  "value": {
                    "name": "tail",
                    "nodeType": "YulIdentifier",
                    "src": "4363:4:15"
                  },
                  "variables": [
                    {
                      "name": "i",
                      "nodeType": "YulTypedName",
                      "src": "4358:1:15",
                      "type": ""
                    }
                  ]
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "4425:169:15",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "name": "pos",
                              "nodeType": "YulIdentifier",
                              "src": "4446:3:15"
                            },
                            {
                              "arguments": [
                                {
                                  "arguments": [
                                    {
                                      "name": "srcPtr",
                                      "nodeType": "YulIdentifier",
                                      "src": "4461:6:15"
                                    }
                                  ],
                                  "functionName": {
                                    "name": "mload",
                                    "nodeType": "YulIdentifier",
                                    "src": "4455:5:15"
                                  },
                                  "nodeType": "YulFunctionCall",
                                  "src": "4455:13:15"
                                },
                                {
                                  "kind": "number",
                                  "nodeType": "YulLiteral",
                                  "src": "4470:42:15",
                                  "type": "",
                                  "value": "0xffffffffffffffffffffffffffffffffffffffff"
                                }
                              ],
                              "functionName": {
                                "name": "and",
                                "nodeType": "YulIdentifier",
                                "src": "4451:3:15"
                              },
                              "nodeType": "YulFunctionCall",
                              "src": "4451:62:15"
                            }
                          ],
                          "functionName": {
                            "name": "mstore",
                            "nodeType": "YulIdentifier",
                            "src": "4439:6:15"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "4439:75:15"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "4439:75:15"
                      },
                      {
                        "nodeType": "YulAssignment",
                        "src": "4527:19:15",
                        "value": {
                          "arguments": [
                            {
                              "name": "pos",
                              "nodeType": "YulIdentifier",
                              "src": "4538:3:15"
                            },
                            {
                              "name": "_1",
                              "nodeType": "YulIdentifier",
                              "src": "4543:2:15"
                            }
                          ],
                          "functionName": {
                            "name": "add",
                            "nodeType": "YulIdentifier",
                            "src": "4534:3:15"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "4534:12:15"
                        },
                        "variableNames": [
                          {
                            "name": "pos",
                            "nodeType": "YulIdentifier",
                            "src": "4527:3:15"
                          }
                        ]
                      },
                      {
                        "nodeType": "YulAssignment",
                        "src": "4559:25:15",
                        "value": {
                          "arguments": [
                            {
                              "name": "srcPtr",
                              "nodeType": "YulIdentifier",
                              "src": "4573:6:15"
                            },
                            {
                              "name": "_1",
                              "nodeType": "YulIdentifier",
                              "src": "4581:2:15"
                            }
                          ],
                          "functionName": {
                            "name": "add",
                            "nodeType": "YulIdentifier",
                            "src": "4569:3:15"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "4569:15:15"
                        },
                        "variableNames": [
                          {
                            "name": "srcPtr",
                            "nodeType": "YulIdentifier",
                            "src": "4559:6:15"
                          }
                        ]
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "name": "i",
                        "nodeType": "YulIdentifier",
                        "src": "4387:1:15"
                      },
                      {
                        "name": "length",
                        "nodeType": "YulIdentifier",
                        "src": "4390:6:15"
                      }
                    ],
                    "functionName": {
                      "name": "lt",
                      "nodeType": "YulIdentifier",
                      "src": "4384:2:15"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4384:13:15"
                  },
                  "nodeType": "YulForLoop",
                  "post": {
                    "nodeType": "YulBlock",
                    "src": "4398:18:15",
                    "statements": [
                      {
                        "nodeType": "YulAssignment",
                        "src": "4400:14:15",
                        "value": {
                          "arguments": [
                            {
                              "name": "i",
                              "nodeType": "YulIdentifier",
                              "src": "4409:1:15"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "4412:1:15",
                              "type": "",
                              "value": "1"
                            }
                          ],
                          "functionName": {
                            "name": "add",
                            "nodeType": "YulIdentifier",
                            "src": "4405:3:15"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "4405:9:15"
                        },
                        "variableNames": [
                          {
                            "name": "i",
                            "nodeType": "YulIdentifier",
                            "src": "4400:1:15"
                          }
                        ]
                      }
                    ]
                  },
                  "pre": {
                    "nodeType": "YulBlock",
                    "src": "4380:3:15",
                    "statements": []
                  },
                  "src": "4376:218:15"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "4603:11:15",
                  "value": {
                    "name": "pos",
                    "nodeType": "YulIdentifier",
                    "src": "4611:3:15"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "4603:4:15"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_array$_t_address_$dyn_memory_ptr__to_t_array$_t_address_$dyn_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "4056:9:15",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "4067:6:15",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "4078:4:15",
                "type": ""
              }
            ],
            "src": "3936:684:15"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "4746:101:15",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "4763:9:15"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "4774:2:15",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "4756:6:15"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4756:21:15"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "4756:21:15"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "4786:55:15",
                  "value": {
                    "arguments": [
                      {
                        "name": "value0",
                        "nodeType": "YulIdentifier",
                        "src": "4814:6:15"
                      },
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "4826:9:15"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "4837:2:15",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "4822:3:15"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "4822:18:15"
                      }
                    ],
                    "functionName": {
                      "name": "abi_encode_t_string",
                      "nodeType": "YulIdentifier",
                      "src": "4794:19:15"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4794:47:15"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "4786:4:15"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "4715:9:15",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "4726:6:15",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "4737:4:15",
                "type": ""
              }
            ],
            "src": "4625:222:15"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "5077:355:15",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "5094:9:15"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "5105:3:15",
                        "type": "",
                        "value": "128"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "5087:6:15"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5087:22:15"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "5087:22:15"
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "5118:62:15",
                  "value": {
                    "arguments": [
                      {
                        "name": "value0",
                        "nodeType": "YulIdentifier",
                        "src": "5152:6:15"
                      },
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "5164:9:15"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "5175:3:15",
                            "type": "",
                            "value": "128"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "5160:3:15"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "5160:19:15"
                      }
                    ],
                    "functionName": {
                      "name": "abi_encode_t_string",
                      "nodeType": "YulIdentifier",
                      "src": "5132:19:15"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5132:48:15"
                  },
                  "variables": [
                    {
                      "name": "tail_1",
                      "nodeType": "YulTypedName",
                      "src": "5122:6:15",
                      "type": ""
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "5200:9:15"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "5211:2:15",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "5196:3:15"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "5196:18:15"
                      },
                      {
                        "arguments": [
                          {
                            "name": "tail_1",
                            "nodeType": "YulIdentifier",
                            "src": "5220:6:15"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "5228:9:15"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "5216:3:15"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "5216:22:15"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "5189:6:15"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5189:50:15"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "5189:50:15"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "5248:43:15",
                  "value": {
                    "arguments": [
                      {
                        "name": "value1",
                        "nodeType": "YulIdentifier",
                        "src": "5276:6:15"
                      },
                      {
                        "name": "tail_1",
                        "nodeType": "YulIdentifier",
                        "src": "5284:6:15"
                      }
                    ],
                    "functionName": {
                      "name": "abi_encode_t_string",
                      "nodeType": "YulIdentifier",
                      "src": "5256:19:15"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5256:35:15"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "5248:4:15"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "5311:9:15"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "5322:2:15",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "5307:3:15"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "5307:18:15"
                      },
                      {
                        "name": "value2",
                        "nodeType": "YulIdentifier",
                        "src": "5327:6:15"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "5300:6:15"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5300:34:15"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "5300:34:15"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "5354:9:15"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "5365:2:15",
                            "type": "",
                            "value": "96"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "5350:3:15"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "5350:18:15"
                      },
                      {
                        "arguments": [
                          {
                            "name": "value3",
                            "nodeType": "YulIdentifier",
                            "src": "5374:6:15"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "5382:42:15",
                            "type": "",
                            "value": "0xffffffffffffffffffffffffffffffffffffffff"
                          }
                        ],
                        "functionName": {
                          "name": "and",
                          "nodeType": "YulIdentifier",
                          "src": "5370:3:15"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "5370:55:15"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "5343:6:15"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5343:83:15"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "5343:83:15"
                }
              ]
            },
            "name": "abi_encode_tuple_t_string_memory_ptr_t_string_memory_ptr_t_uint256_t_address__to_t_string_memory_ptr_t_string_memory_ptr_t_uint256_t_address__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "5022:9:15",
                "type": ""
              },
              {
                "name": "value3",
                "nodeType": "YulTypedName",
                "src": "5033:6:15",
                "type": ""
              },
              {
                "name": "value2",
                "nodeType": "YulTypedName",
                "src": "5041:6:15",
                "type": ""
              },
              {
                "name": "value1",
                "nodeType": "YulTypedName",
                "src": "5049:6:15",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "5057:6:15",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "5068:4:15",
                "type": ""
              }
            ],
            "src": "4852:580:15"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "5611:228:15",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "5628:9:15"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "5639:2:15",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "5621:6:15"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5621:21:15"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "5621:21:15"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "5662:9:15"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "5673:2:15",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "5658:3:15"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "5658:18:15"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "5678:2:15",
                        "type": "",
                        "value": "38"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "5651:6:15"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5651:30:15"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "5651:30:15"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "5701:9:15"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "5712:2:15",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "5697:3:15"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "5697:18:15"
                      },
                      {
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "5717:34:15",
                        "type": "",
                        "value": "Ownable: new owner is the zero a"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "5690:6:15"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5690:62:15"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "5690:62:15"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "5772:9:15"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "5783:2:15",
                            "type": "",
                            "value": "96"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "5768:3:15"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "5768:18:15"
                      },
                      {
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "5788:8:15",
                        "type": "",
                        "value": "ddress"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "5761:6:15"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5761:36:15"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "5761:36:15"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "5806:27:15",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "5818:9:15"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "5829:3:15",
                        "type": "",
                        "value": "128"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "5814:3:15"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5814:19:15"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "5806:4:15"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "5588:9:15",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "5602:4:15",
                "type": ""
              }
            ],
            "src": "5437:402:15"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "6018:178:15",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "6035:9:15"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "6046:2:15",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "6028:6:15"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "6028:21:15"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "6028:21:15"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "6069:9:15"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "6080:2:15",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "6065:3:15"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "6065:18:15"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "6085:2:15",
                        "type": "",
                        "value": "28"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "6058:6:15"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "6058:30:15"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "6058:30:15"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "6108:9:15"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "6119:2:15",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "6104:3:15"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "6104:18:15"
                      },
                      {
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "6124:30:15",
                        "type": "",
                        "value": "amount cannot exceed balance"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "6097:6:15"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "6097:58:15"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "6097:58:15"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "6164:26:15",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "6176:9:15"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "6187:2:15",
                        "type": "",
                        "value": "96"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "6172:3:15"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "6172:18:15"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "6164:4:15"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_stringliteral_3f0253308a39e35a7e906ec6a9f783a7fb912dcdb791d15e6fb25a299ba4c266__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "5995:9:15",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "6009:4:15",
                "type": ""
              }
            ],
            "src": "5844:352:15"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "6375:229:15",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "6392:9:15"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "6403:2:15",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "6385:6:15"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "6385:21:15"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "6385:21:15"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "6426:9:15"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "6437:2:15",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "6422:3:15"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "6422:18:15"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "6442:2:15",
                        "type": "",
                        "value": "39"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "6415:6:15"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "6415:30:15"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "6415:30:15"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "6465:9:15"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "6476:2:15",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "6461:3:15"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "6461:18:15"
                      },
                      {
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "6481:34:15",
                        "type": "",
                        "value": "the new price can not be less th"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "6454:6:15"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "6454:62:15"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "6454:62:15"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "6536:9:15"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "6547:2:15",
                            "type": "",
                            "value": "96"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "6532:3:15"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "6532:18:15"
                      },
                      {
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "6552:9:15",
                        "type": "",
                        "value": "an zero"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "6525:6:15"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "6525:37:15"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "6525:37:15"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "6571:27:15",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "6583:9:15"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "6594:3:15",
                        "type": "",
                        "value": "128"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "6579:3:15"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "6579:19:15"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "6571:4:15"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_stringliteral_4a282d1a1eae2ee0c7c30408c3db77be9a777efe1c06f4dd8330fab3308ef30b__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "6352:9:15",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "6366:4:15",
                "type": ""
              }
            ],
            "src": "6201:403:15"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "6783:182:15",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "6800:9:15"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "6811:2:15",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "6793:6:15"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "6793:21:15"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "6793:21:15"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "6834:9:15"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "6845:2:15",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "6830:3:15"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "6830:18:15"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "6850:2:15",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "6823:6:15"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "6823:30:15"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "6823:30:15"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "6873:9:15"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "6884:2:15",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "6869:3:15"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "6869:18:15"
                      },
                      {
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "6889:34:15",
                        "type": "",
                        "value": "Ownable: caller is not the owner"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "6862:6:15"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "6862:62:15"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "6862:62:15"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "6933:26:15",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "6945:9:15"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "6956:2:15",
                        "type": "",
                        "value": "96"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "6941:3:15"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "6941:18:15"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "6933:4:15"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "6760:9:15",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "6774:4:15",
                "type": ""
              }
            ],
            "src": "6609:356:15"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "7071:76:15",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "7081:26:15",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "7093:9:15"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "7104:2:15",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "7089:3:15"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "7089:18:15"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "7081:4:15"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "7123:9:15"
                      },
                      {
                        "name": "value0",
                        "nodeType": "YulIdentifier",
                        "src": "7134:6:15"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "7116:6:15"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "7116:25:15"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "7116:25:15"
                }
              ]
            },
            "name": "abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "7040:9:15",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "7051:6:15",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "7062:4:15",
                "type": ""
              }
            ],
            "src": "6970:177:15"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "7184:152:15",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "7201:1:15",
                        "type": "",
                        "value": "0"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "7204:77:15",
                        "type": "",
                        "value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "7194:6:15"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "7194:88:15"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "7194:88:15"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "7298:1:15",
                        "type": "",
                        "value": "4"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "7301:4:15",
                        "type": "",
                        "value": "0x41"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "7291:6:15"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "7291:15:15"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "7291:15:15"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "7322:1:15",
                        "type": "",
                        "value": "0"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "7325:4:15",
                        "type": "",
                        "value": "0x24"
                      }
                    ],
                    "functionName": {
                      "name": "revert",
                      "nodeType": "YulIdentifier",
                      "src": "7315:6:15"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "7315:15:15"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "7315:15:15"
                }
              ]
            },
            "name": "panic_error_0x41",
            "nodeType": "YulFunctionDefinition",
            "src": "7152:184:15"
          }
        ]
      },
      "contents": "{\n    { }\n    function abi_decode_t_address(offset) -> value\n    {\n        value := calldataload(offset)\n        if iszero(eq(value, and(value, 0xffffffffffffffffffffffffffffffffffffffff))) { revert(0, 0) }\n    }\n    function abi_decode_t_string(offset, end) -> array\n    {\n        if iszero(slt(add(offset, 0x1f), end)) { revert(array, array) }\n        let _1 := calldataload(offset)\n        let _2 := 0xffffffffffffffff\n        if gt(_1, _2) { panic_error_0x41() }\n        let memPtr := mload(64)\n        let newFreePtr := add(add(memPtr, and(add(_1, 0x1f), not(31))), 0x20)\n        if or(gt(newFreePtr, _2), lt(newFreePtr, memPtr)) { panic_error_0x41() }\n        mstore(64, newFreePtr)\n        mstore(memPtr, _1)\n        if gt(add(add(offset, _1), 0x20), end) { revert(array, array) }\n        calldatacopy(add(memPtr, 0x20), add(offset, 0x20), _1)\n        mstore(add(add(memPtr, _1), 0x20), array)\n        array := memPtr\n    }\n    function abi_decode_tuple_t_address(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(value0, value0) }\n        value0 := abi_decode_t_address(headStart)\n    }\n    function abi_decode_tuple_t_addresst_uint256(headStart, dataEnd) -> value0, value1\n    {\n        if slt(sub(dataEnd, headStart), 64) { revert(value1, value1) }\n        value0 := abi_decode_t_address(headStart)\n        value1 := calldataload(add(headStart, 32))\n    }\n    function abi_decode_tuple_t_string_memory_ptrt_string_memory_ptrt_uint256(headStart, dataEnd) -> value0, value1, value2\n    {\n        if slt(sub(dataEnd, headStart), 96) { revert(value2, value2) }\n        let offset := calldataload(headStart)\n        let _1 := 0xffffffffffffffff\n        if gt(offset, _1) { revert(value2, value2) }\n        value0 := abi_decode_t_string(add(headStart, offset), dataEnd)\n        let offset_1 := calldataload(add(headStart, 32))\n        if gt(offset_1, _1) { revert(value2, value2) }\n        value1 := abi_decode_t_string(add(headStart, offset_1), dataEnd)\n        value2 := calldataload(add(headStart, 64))\n    }\n    function abi_decode_tuple_t_uint256(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(value0, value0) }\n        value0 := calldataload(headStart)\n    }\n    function abi_encode_t_string(value, pos) -> end\n    {\n        let length := mload(value)\n        mstore(pos, length)\n        let i := end\n        for { } lt(i, length) { i := add(i, 0x20) }\n        {\n            let _1 := 0x20\n            mstore(add(add(pos, i), _1), mload(add(add(value, i), _1)))\n        }\n        if gt(i, length)\n        {\n            mstore(add(add(pos, length), 0x20), end)\n        }\n        end := add(add(pos, and(add(length, 31), not(31))), 0x20)\n    }\n    function abi_encode_tuple_packed_t_stringliteral_593b7312de750c8070ddc6e535aae7177f6d680dbdadb33177976809c71a2df2__to_t_string_memory_ptr__nonPadded_inplace_fromStack_reversed(pos) -> end\n    {\n        mstore(pos, \"The price to create a collection\")\n        mstore(add(pos, 32), \" was not met.\")\n        end := add(pos, 45)\n    }\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, and(value0, 0xffffffffffffffffffffffffffffffffffffffff))\n    }\n    function abi_encode_tuple_t_address_t_address__to_t_address_t_address__fromStack_reversed(headStart, value1, value0) -> tail\n    {\n        tail := add(headStart, 64)\n        let _1 := 0xffffffffffffffffffffffffffffffffffffffff\n        mstore(headStart, and(value0, _1))\n        mstore(add(headStart, 32), and(value1, _1))\n    }\n    function abi_encode_tuple_t_address_t_uint256__to_t_address_t_uint256__fromStack_reversed(headStart, value1, value0) -> tail\n    {\n        tail := add(headStart, 64)\n        mstore(headStart, and(value0, 0xffffffffffffffffffffffffffffffffffffffff))\n        mstore(add(headStart, 32), value1)\n    }\n    function abi_encode_tuple_t_array$_t_address_$dyn_memory_ptr__to_t_array$_t_address_$dyn_memory_ptr__fromStack_reversed(headStart, value0) -> tail\n    {\n        let _1 := 32\n        let tail_1 := add(headStart, _1)\n        mstore(headStart, _1)\n        let pos := tail_1\n        let length := mload(value0)\n        mstore(tail_1, length)\n        pos := add(headStart, 64)\n        let srcPtr := add(value0, _1)\n        let i := tail\n        for { } lt(i, length) { i := add(i, 1) }\n        {\n            mstore(pos, and(mload(srcPtr), 0xffffffffffffffffffffffffffffffffffffffff))\n            pos := add(pos, _1)\n            srcPtr := add(srcPtr, _1)\n        }\n        tail := pos\n    }\n    function abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed(headStart, value0) -> tail\n    {\n        mstore(headStart, 32)\n        tail := abi_encode_t_string(value0, add(headStart, 32))\n    }\n    function abi_encode_tuple_t_string_memory_ptr_t_string_memory_ptr_t_uint256_t_address__to_t_string_memory_ptr_t_string_memory_ptr_t_uint256_t_address__fromStack_reversed(headStart, value3, value2, value1, value0) -> tail\n    {\n        mstore(headStart, 128)\n        let tail_1 := abi_encode_t_string(value0, add(headStart, 128))\n        mstore(add(headStart, 32), sub(tail_1, headStart))\n        tail := abi_encode_t_string(value1, tail_1)\n        mstore(add(headStart, 64), value2)\n        mstore(add(headStart, 96), and(value3, 0xffffffffffffffffffffffffffffffffffffffff))\n    }\n    function abi_encode_tuple_t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 38)\n        mstore(add(headStart, 64), \"Ownable: new owner is the zero a\")\n        mstore(add(headStart, 96), \"ddress\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_3f0253308a39e35a7e906ec6a9f783a7fb912dcdb791d15e6fb25a299ba4c266__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 28)\n        mstore(add(headStart, 64), \"amount cannot exceed balance\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_stringliteral_4a282d1a1eae2ee0c7c30408c3db77be9a777efe1c06f4dd8330fab3308ef30b__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 39)\n        mstore(add(headStart, 64), \"the new price can not be less th\")\n        mstore(add(headStart, 96), \"an zero\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 32)\n        mstore(add(headStart, 64), \"Ownable: caller is not the owner\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, value0)\n    }\n    function panic_error_0x41()\n    {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x41)\n        revert(0, 0x24)\n    }\n}",
      "id": 15,
      "language": "Yul",
      "name": "#utility.yul"
    }
  ],
  "sourceMap": "147:2461:2:-:0;;;210:19;185:44;;147:2461;;;;;;;;;-1:-1:-1;867:17:3;887:12;:10;;;;:12;:::i;:::-;909:6;:18;;-1:-1:-1;;;;;;909:18:3;-1:-1:-1;;;;;909:18:3;;;;;;;942:43;;909:18;;-1:-1:-1;909:18:3;942:43;;909:6;;942:43;842:150;147:2461:2;;586:96:11;665:10;586:96;:::o;147:2461:2:-;;;;;;;",
  "deployedSourceMap": "147:2461:2:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2175:108;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;735:765;;;;;;:::i;:::-;;:::i;:::-;;1700:145:3;;;;;;;;;;;;;:::i;1997:170:2:-;;;;;;;;;;-1:-1:-1;1997:170:2;;;;;:::i;:::-;;:::i;1068:85:3:-;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;1613:135:2:-;;;;;;;;;;-1:-1:-1;1613:135:2;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;1508:97::-;;;;;;;;;;;;;:::i;1898:91::-;;;;;;;;;;;;;:::i;1994:240:3:-;;;;;;;;;;-1:-1:-1;1994:240:3;;;;;:::i;:::-;;:::i;2291:314:2:-;;;;;;;;;;-1:-1:-1;2291:314:2;;;;;:::i;:::-;;:::i;2175:108::-;2230:4;1291:12:3;:10;:12::i;:::-;-1:-1:-1;;;;;1280:23:3;:7;:5;:7::i;:::-;-1:-1:-1;;;;;1280:23:3;;1272:68;;;;-1:-1:-1;;;;;1272:68:3;;;;;;;:::i;:::-;;;;;;;;;-1:-1:-1;2262:4:2::1;2254:21;2175:108:::0;:::o;735:765::-;870:6;;857:9;:19;;885:65;;;;;;;:::i;:::-;;;;;;;;;;;;;849:103;;;;;-1:-1:-1;;;;;849:103:2;;;;;;;;:::i;:::-;;965:18;1004:4;1010:6;1018:9;1029:10;986:54;;;;;:::i;:::-;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;1189:10:2;1051:12;1172:28;;;:16;:28;;;;;:35;965:75;;-1:-1:-1;965:75:2;;1172:39;;;1222:112;;1297:8;:25;;;;;;;-1:-1:-1;1297:25:2;;;;;;;;-1:-1:-1;;1297:25:2;1311:10;1297:25;;;1222:112;1417:10;1400:28;;;;:16;:28;;;;;;;;:39;;;;;;;;;;;;;;;;;-1:-1:-1;;1400:39:2;-1:-1:-1;;;;;1400:39:2;;;;;1457:35;;;;;1400:39;;1457:35;:::i;:::-;;;;;;;;735:765;;;;;;:::o;1700:145:3:-;1291:12;:10;:12::i;:::-;-1:-1:-1;;;;;1280:23:3;:7;:5;:7::i;:::-;-1:-1:-1;;;;;1280:23:3;;1272:68;;;;-1:-1:-1;;;;;1272:68:3;;;;;;;:::i;:::-;1806:1:::1;1790:6:::0;;1769:40:::1;::::0;-1:-1:-1;;;;;1790:6:3;;::::1;::::0;1769:40:::1;::::0;1806:1;;1769:40:::1;1836:1;1819:19:::0;;-1:-1:-1;;1819:19:3::1;::::0;;1700:145::o;1997:170:2:-;1291:12:3;:10;:12::i;:::-;-1:-1:-1;;;;;1280:23:3;:7;:5;:7::i;:::-;-1:-1:-1;;;;;1280:23:3;;1272:68;;;;-1:-1:-1;;;;;1272:68:3;;;;;;;:::i;:::-;2142:6:2::1;:17:::0;1997:170::o;1068:85:3:-;1114:7;1140:6;-1:-1:-1;;;;;1140:6:3;1068:85;:::o;1613:135:2:-;-1:-1:-1;;;;;1716:24:2;;;;;;:16;:24;;;;;;;;;1709:31;;;;;;;;;;;;;;;;;1680:16;;1709:31;;;1716:24;1709:31;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;1709:31:2;;;;;;;;;;;;;;;;;;;;;;;1613:135;;;;:::o;1508:97::-;1553:16;1589:8;1582:15;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;1582:15:2;;;;;;;;;;;;;;;;;;;;;;;1508:97;:::o;1898:91::-;1975:6;;1898:91;:::o;1994:240:3:-;1291:12;:10;:12::i;:::-;-1:-1:-1;;;;;1280:23:3;:7;:5;:7::i;:::-;-1:-1:-1;;;;;1280:23:3;;1272:68;;;;-1:-1:-1;;;;;1272:68:3;;;;;;;:::i;:::-;-1:-1:-1;;;;;2082:22:3;::::1;2074:73;;;;-1:-1:-1::0;;;;;2074:73:3::1;;;;;;;:::i;:::-;2183:6;::::0;;2162:38:::1;::::0;-1:-1:-1;;;;;2162:38:3;;::::1;::::0;2183:6;::::1;::::0;2162:38:::1;::::0;::::1;2210:6;:17:::0;;-1:-1:-1;;2210:17:3::1;-1:-1:-1::0;;;;;2210:17:3;;;::::1;::::0;;;::::1;::::0;;1994:240::o;2291:314:2:-;1291:12:3;:10;:12::i;:::-;-1:-1:-1;;;;;1280:23:3;:7;:5;:7::i;:::-;-1:-1:-1;;;;;1280:23:3;;1272:68;;;;-1:-1:-1;;;;;1272:68:3;;;;;;;:::i;:::-;2443:4:2::1;2435:21;2475:12:::0;;::::1;2467:53;;;;-1:-1:-1::0;;;;;2467:53:2::1;;;;;;;:::i;:::-;2531:28;::::0;-1:-1:-1;;;;;2531:20:2;::::1;::::0;:28;::::1;;;::::0;2552:6;;2531:28:::1;::::0;;;2552:6;2531:20;:28;::::1;;;;;;;;;;;;;::::0;::::1;;;;;;2570:27;2586:2;2590:6;2570:27;;;;;;;:::i;:::-;;;;;;;;1350:1:3;2291:314:2::0;;:::o;586:96:11:-;665:10;586:96;:::o;-1:-1:-1:-;;;;;;;;:::o;14:198:15:-;84:20;;-1:-1:-1;;;;;133:54:15;;123:65;;113:2;;202:1;199;192:12;217:713;;315:3;308:4;300:6;296:17;292:27;282:2;;337:5;330;323:20;282:2;377:6;364:20;403:18;440:2;436;433:10;430:2;;;446:18;;:::i;:::-;495:2;489:9;564:2;545:13;;-1:-1:-1;;541:27:15;529:40;;571:4;525:51;591:18;;;611:22;;;588:46;585:2;;;637:18;;:::i;:::-;673:2;666:22;697:18;;;734:15;;;751:4;730:26;727:35;-1:-1:-1;724:2:15;;;779:5;772;765:20;724:2;847;840:4;832:6;828:17;821:4;813:6;809:17;796:54;870:15;;;887:4;866:26;859:41;;;;874:6;272:658;-1:-1:-1;;;272:658:15:o;935:198::-;;1047:2;1035:9;1026:7;1022:23;1018:32;1015:2;;;1068:6;1060;1053:22;1015:2;1096:31;1117:9;1096:31;:::i;:::-;1086:41;1005:128;-1:-1:-1;;;1005:128:15:o;1138:266::-;;;1267:2;1255:9;1246:7;1242:23;1238:32;1235:2;;;1288:6;1280;1273:22;1235:2;1316:31;1337:9;1316:31;:::i;:::-;1306:41;1394:2;1379:18;;;;1366:32;;-1:-1:-1;;;1225:179:15:o;1409:645::-;;;;1575:2;1563:9;1554:7;1550:23;1546:32;1543:2;;;1596:6;1588;1581:22;1543:2;1641:9;1628:23;1670:18;1711:2;1703:6;1700:14;1697:2;;;1732:6;1724;1717:22;1697:2;1760:52;1804:7;1795:6;1784:9;1780:22;1760:52;:::i;:::-;1750:62;;1865:2;1854:9;1850:18;1837:32;1821:48;;1894:2;1884:8;1881:16;1878:2;;;1915:6;1907;1900:22;1878:2;;1943:54;1989:7;1978:8;1967:9;1963:24;1943:54;:::i;:::-;1933:64;;;2044:2;2033:9;2029:18;2016:32;2006:42;;1533:521;;;;;:::o;2059:190::-;;2171:2;2159:9;2150:7;2146:23;2142:32;2139:2;;;2192:6;2184;2177:22;2139:2;-1:-1:-1;2220:23:15;;2129:120;-1:-1:-1;2129:120:15:o;2254:478::-;;2336:5;2330:12;2363:6;2358:3;2351:19;2388:3;2400:162;2414:6;2411:1;2408:13;2400:162;;;2476:4;2532:13;;;2528:22;;2522:29;2504:11;;;2500:20;;2493:59;2429:12;2400:162;;;2580:6;2577:1;2574:13;2571:2;;;2646:3;2639:4;2630:6;2625:3;2621:16;2617:27;2610:40;2571:2;-1:-1:-1;2714:2:15;2693:15;-1:-1:-1;;2689:29:15;2680:39;;;;2721:4;2676:50;;2306:426;-1:-1:-1;;2306:426:15:o;2737:329::-;2951:34;2939:47;;3016:15;3011:2;3002:12;;2995:37;3057:2;3048:12;;2929:137::o;3071:226::-;-1:-1:-1;;;;;3235:55:15;;;;3217:74;;3205:2;3190:18;;3172:125::o;3302:327::-;-1:-1:-1;;;;;3555:15:15;;;3537:34;;3607:15;;3602:2;3587:18;;3580:43;3464:2;3449:18;;3431:198::o;3634:297::-;-1:-1:-1;;;;;3826:55:15;;;;3808:74;;3913:2;3898:18;;3891:34;3796:2;3781:18;;3763:168::o;3936:684::-;4107:2;4159:21;;;4229:13;;4132:18;;;4251:22;;;3936:684;;4107:2;4330:15;;;;4304:2;4289:18;;;3936:684;4376:218;4390:6;4387:1;4384:13;4376:218;;;4455:13;;-1:-1:-1;;;;;4451:62:15;4439:75;;4569:15;;;;4534:12;;;;4412:1;4405:9;4376:218;;;-1:-1:-1;4611:3:15;;4087:533;-1:-1:-1;;;;;;4087:533:15:o;4625:222::-;;4774:2;4763:9;4756:21;4794:47;4837:2;4826:9;4822:18;4814:6;4794:47;:::i;4852:580::-;;5105:3;5094:9;5087:22;5132:48;5175:3;5164:9;5160:19;5152:6;5132:48;:::i;:::-;5228:9;5220:6;5216:22;5211:2;5200:9;5196:18;5189:50;5256:35;5284:6;5276;5256:35;:::i;:::-;5248:43;;;5327:6;5322:2;5311:9;5307:18;5300:34;-1:-1:-1;;;;;5374:6:15;5370:55;5365:2;5354:9;5350:18;5343:83;5077:355;;;;;;;:::o;5437:402::-;5639:2;5621:21;;;5678:2;5658:18;;;5651:30;5717:34;5712:2;5697:18;;5690:62;5788:8;5783:2;5768:18;;5761:36;5829:3;5814:19;;5611:228::o;5844:352::-;6046:2;6028:21;;;6085:2;6065:18;;;6058:30;6124;6119:2;6104:18;;6097:58;6187:2;6172:18;;6018:178::o;6609:356::-;6811:2;6793:21;;;6830:18;;;6823:30;6889:34;6884:2;6869:18;;6862:62;6956:2;6941:18;;6783:182::o;6970:177::-;7116:25;;;7104:2;7089:18;;7071:76::o;7152:184::-;7204:77;7201:1;7194:88;7301:4;7298:1;7291:15;7325:4;7322:1;7315:15",
  "source": "// SPDX-License-Identifier: MIT\r\npragma solidity ^0.8.0;\r\n\r\nimport \"@openzeppelin/contracts/access/Ownable.sol\";\r\nimport \"./NftCollection.sol\";\r\n\r\ncontract NftFactory is Ownable {\r\n    uint256 private _price = 1000000000000000000;\r\n    address private _owner;\r\n\r\n    mapping (address => address[]) private _walletContracts;\r\n    address[] private _wallets;\r\n\r\n    event CollectionCreated(address owner, address contractAddress);\r\n    event OwnerWithdrawal(address owner, uint amount);\r\n\r\n    //TODO: add variables and functions for storing challenges and wins\r\n    //TODO: add logic for minting new NFTs after so many wins\r\n    //TODO: Can a node service load the private key of this contract owner in order to update the wins?\r\n\r\n    function createCollection(string memory name, string memory symbol, uint maxTokens) external payable {\r\n\r\n        require(msg.value >= _price, string(abi.encodePacked(\"The price to create a collection was not met.\")));\r\n\r\n        NftCollection coll = new NftCollection(name, symbol, maxTokens, msg.sender);\r\n        address addr = address(coll);\r\n\r\n        //check if this wallet has been added to the mapping yet\r\n        bool exists = _walletContracts[msg.sender].length > 0;\r\n        if (!exists) {\r\n            //track wallets in separate array\r\n            _wallets.push(msg.sender);\r\n        }\r\n        \r\n        //add adress to the wallet's mapping\r\n        _walletContracts[msg.sender].push(addr);\r\n\r\n        emit CollectionCreated(msg.sender, addr);\r\n    }\r\n\r\n    function getWallets() external view returns (address[] memory) {\r\n        return _wallets;\r\n    }\r\n\r\n    function getWalletContracts(address wallet) external view returns (address[] memory) {\r\n        return _walletContracts[wallet];\r\n    }\r\n\r\n    // function getWalletContracts() external view returns (address[] memory) {\r\n    //     return _walletContracts[msg.sender];\r\n    // }\r\n\r\n    function getCurrentPrice() external view returns (uint256) {\r\n        return _price;\r\n    }\r\n\r\n    function updatePrice(uint256 newPrice) external onlyOwner {\r\n        require(newPrice >= 0, \"the new price can not be less than zero\");\r\n        _price = newPrice;\r\n    }\r\n\r\n    function getBalance() external view onlyOwner returns (uint) {\r\n        return address(this).balance;\r\n    }\r\n\r\n    function withdraw(address to, uint amount) external onlyOwner {\r\n        // get the amount of Ether stored in this contract\r\n        uint bal = address(this).balance;\r\n        require(bal > amount, \"amount cannot exceed balance\");\r\n        payable(to).transfer(amount);\r\n        OwnerWithdrawal(to, amount);\r\n    }\r\n}\r\n",
  "sourcePath": "C:/__/NFT/nft-minter/solidity/contracts/NftFactory.sol",
  "ast": {
    "absolutePath": "/C/__/NFT/nft-minter/solidity/contracts/NftFactory.sol",
    "exportedSymbols": {
      "Address": [
        2314
      ],
      "Context": [
        2337
      ],
      "ERC165": [
        2564
      ],
      "ERC721": [
        1488
      ],
      "ERC721Enumerable": [
        1960
      ],
      "IERC165": [
        2576
      ],
      "IERC721": [
        1604
      ],
      "IERC721Enumerable": [
        1991
      ],
      "IERC721Metadata": [
        2018
      ],
      "IERC721Receiver": [
        1622
      ],
      "NftCollection": [
        345
      ],
      "NftFactory": [
        557
      ],
      "Ownable": [
        667
      ],
      "Strings": [
        2540
      ]
    },
    "id": 558,
    "license": "MIT",
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 347,
        "literals": [
          "solidity",
          "^",
          "0.8",
          ".0"
        ],
        "nodeType": "PragmaDirective",
        "src": "33:23:2"
      },
      {
        "absolutePath": "@openzeppelin/contracts/access/Ownable.sol",
        "file": "@openzeppelin/contracts/access/Ownable.sol",
        "id": 348,
        "nodeType": "ImportDirective",
        "scope": 558,
        "sourceUnit": 668,
        "src": "60:52:2",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "/C/__/NFT/nft-minter/solidity/contracts/NftCollection.sol",
        "file": "./NftCollection.sol",
        "id": 349,
        "nodeType": "ImportDirective",
        "scope": 558,
        "sourceUnit": 346,
        "src": "114:29:2",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "abstract": false,
        "baseContracts": [
          {
            "baseName": {
              "id": 350,
              "name": "Ownable",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 667,
              "src": "170:7:2"
            },
            "id": 351,
            "nodeType": "InheritanceSpecifier",
            "src": "170:7:2"
          }
        ],
        "contractDependencies": [
          345,
          667,
          2337
        ],
        "contractKind": "contract",
        "fullyImplemented": true,
        "id": 557,
        "linearizedBaseContracts": [
          557,
          667,
          2337
        ],
        "name": "NftFactory",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "constant": false,
            "id": 354,
            "mutability": "mutable",
            "name": "_price",
            "nodeType": "VariableDeclaration",
            "scope": 557,
            "src": "185:44:2",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 352,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "185:7:2",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "value": {
              "hexValue": "31303030303030303030303030303030303030",
              "id": 353,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "number",
              "lValueRequested": false,
              "nodeType": "Literal",
              "src": "210:19:2",
              "typeDescriptions": {
                "typeIdentifier": "t_rational_1000000000000000000_by_1",
                "typeString": "int_const 1000000000000000000"
              },
              "value": "1000000000000000000"
            },
            "visibility": "private"
          },
          {
            "constant": false,
            "id": 356,
            "mutability": "mutable",
            "name": "_owner",
            "nodeType": "VariableDeclaration",
            "scope": 557,
            "src": "236:22:2",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_address",
              "typeString": "address"
            },
            "typeName": {
              "id": 355,
              "name": "address",
              "nodeType": "ElementaryTypeName",
              "src": "236:7:2",
              "stateMutability": "nonpayable",
              "typeDescriptions": {
                "typeIdentifier": "t_address",
                "typeString": "address"
              }
            },
            "visibility": "private"
          },
          {
            "constant": false,
            "id": 361,
            "mutability": "mutable",
            "name": "_walletContracts",
            "nodeType": "VariableDeclaration",
            "scope": 557,
            "src": "267:55:2",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_address_$_t_array$_t_address_$dyn_storage_$",
              "typeString": "mapping(address => address[])"
            },
            "typeName": {
              "id": 360,
              "keyType": {
                "id": 357,
                "name": "address",
                "nodeType": "ElementaryTypeName",
                "src": "276:7:2",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                }
              },
              "nodeType": "Mapping",
              "src": "267:30:2",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_address_$_t_array$_t_address_$dyn_storage_$",
                "typeString": "mapping(address => address[])"
              },
              "valueType": {
                "baseType": {
                  "id": 358,
                  "name": "address",
                  "nodeType": "ElementaryTypeName",
                  "src": "287:7:2",
                  "stateMutability": "nonpayable",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  }
                },
                "id": 359,
                "nodeType": "ArrayTypeName",
                "src": "287:9:2",
                "typeDescriptions": {
                  "typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
                  "typeString": "address[]"
                }
              }
            },
            "visibility": "private"
          },
          {
            "constant": false,
            "id": 364,
            "mutability": "mutable",
            "name": "_wallets",
            "nodeType": "VariableDeclaration",
            "scope": 557,
            "src": "329:26:2",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_array$_t_address_$dyn_storage",
              "typeString": "address[]"
            },
            "typeName": {
              "baseType": {
                "id": 362,
                "name": "address",
                "nodeType": "ElementaryTypeName",
                "src": "329:7:2",
                "stateMutability": "nonpayable",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                }
              },
              "id": 363,
              "nodeType": "ArrayTypeName",
              "src": "329:9:2",
              "typeDescriptions": {
                "typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
                "typeString": "address[]"
              }
            },
            "visibility": "private"
          },
          {
            "anonymous": false,
            "id": 370,
            "name": "CollectionCreated",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 369,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 366,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "owner",
                  "nodeType": "VariableDeclaration",
                  "scope": 370,
                  "src": "388:13:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 365,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "388:7:2",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 368,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "contractAddress",
                  "nodeType": "VariableDeclaration",
                  "scope": 370,
                  "src": "403:23:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 367,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "403:7:2",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "387:40:2"
            },
            "src": "364:64:2"
          },
          {
            "anonymous": false,
            "id": 376,
            "name": "OwnerWithdrawal",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 375,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 372,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "owner",
                  "nodeType": "VariableDeclaration",
                  "scope": 376,
                  "src": "456:13:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 371,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "456:7:2",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 374,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "amount",
                  "nodeType": "VariableDeclaration",
                  "scope": 376,
                  "src": "471:11:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 373,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "471:4:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "455:28:2"
            },
            "src": "434:50:2"
          },
          {
            "body": {
              "id": 454,
              "nodeType": "Block",
              "src": "836:664:2",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 389,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "expression": {
                            "id": 386,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4294967281,
                            "src": "857:3:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 387,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "value",
                          "nodeType": "MemberAccess",
                          "src": "857:9:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": ">=",
                        "rightExpression": {
                          "id": 388,
                          "name": "_price",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 354,
                          "src": "870:6:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "857:19:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "hexValue": "54686520707269636520746f20637265617465206120636f6c6c656374696f6e20776173206e6f74206d65742e",
                                "id": 394,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "string",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "902:47:2",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_stringliteral_593b7312de750c8070ddc6e535aae7177f6d680dbdadb33177976809c71a2df2",
                                  "typeString": "literal_string \"The price to create a collection was not met.\""
                                },
                                "value": "The price to create a collection was not met."
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_stringliteral_593b7312de750c8070ddc6e535aae7177f6d680dbdadb33177976809c71a2df2",
                                  "typeString": "literal_string \"The price to create a collection was not met.\""
                                }
                              ],
                              "expression": {
                                "id": 392,
                                "name": "abi",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 4294967295,
                                "src": "885:3:2",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_magic_abi",
                                  "typeString": "abi"
                                }
                              },
                              "id": 393,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "memberName": "encodePacked",
                              "nodeType": "MemberAccess",
                              "src": "885:16:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_abiencodepacked_pure$__$returns$_t_bytes_memory_ptr_$",
                                "typeString": "function () pure returns (bytes memory)"
                              }
                            },
                            "id": 395,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "885:65:2",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes_memory_ptr",
                              "typeString": "bytes memory"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_bytes_memory_ptr",
                              "typeString": "bytes memory"
                            }
                          ],
                          "id": 391,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "878:6:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_string_storage_ptr_$",
                            "typeString": "type(string storage pointer)"
                          },
                          "typeName": {
                            "id": 390,
                            "name": "string",
                            "nodeType": "ElementaryTypeName",
                            "src": "878:6:2",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 396,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "878:73:2",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        }
                      ],
                      "id": 385,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "849:7:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 397,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "849:103:2",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 398,
                  "nodeType": "ExpressionStatement",
                  "src": "849:103:2"
                },
                {
                  "assignments": [
                    401
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 401,
                      "mutability": "mutable",
                      "name": "coll",
                      "nodeType": "VariableDeclaration",
                      "scope": 454,
                      "src": "965:18:2",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_NftCollection_$345",
                        "typeString": "contract NftCollection"
                      },
                      "typeName": {
                        "id": 400,
                        "nodeType": "UserDefinedTypeName",
                        "pathNode": {
                          "id": 399,
                          "name": "NftCollection",
                          "nodeType": "IdentifierPath",
                          "referencedDeclaration": 345,
                          "src": "965:13:2"
                        },
                        "referencedDeclaration": 345,
                        "src": "965:13:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_NftCollection_$345",
                          "typeString": "contract NftCollection"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 411,
                  "initialValue": {
                    "arguments": [
                      {
                        "id": 405,
                        "name": "name",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 378,
                        "src": "1004:4:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        }
                      },
                      {
                        "id": 406,
                        "name": "symbol",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 380,
                        "src": "1010:6:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        }
                      },
                      {
                        "id": 407,
                        "name": "maxTokens",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 382,
                        "src": "1018:9:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "expression": {
                          "id": 408,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 4294967281,
                          "src": "1029:3:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 409,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "1029:10:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        },
                        {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 404,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "NewExpression",
                      "src": "986:17:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_creation_nonpayable$_t_string_memory_ptr_$_t_string_memory_ptr_$_t_uint256_$_t_address_$returns$_t_contract$_NftCollection_$345_$",
                        "typeString": "function (string memory,string memory,uint256,address) returns (contract NftCollection)"
                      },
                      "typeName": {
                        "id": 403,
                        "nodeType": "UserDefinedTypeName",
                        "pathNode": {
                          "id": 402,
                          "name": "NftCollection",
                          "nodeType": "IdentifierPath",
                          "referencedDeclaration": 345,
                          "src": "990:13:2"
                        },
                        "referencedDeclaration": 345,
                        "src": "990:13:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_NftCollection_$345",
                          "typeString": "contract NftCollection"
                        }
                      }
                    },
                    "id": 410,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "986:54:2",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_NftCollection_$345",
                      "typeString": "contract NftCollection"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "965:75:2"
                },
                {
                  "assignments": [
                    413
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 413,
                      "mutability": "mutable",
                      "name": "addr",
                      "nodeType": "VariableDeclaration",
                      "scope": 454,
                      "src": "1051:12:2",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      },
                      "typeName": {
                        "id": 412,
                        "name": "address",
                        "nodeType": "ElementaryTypeName",
                        "src": "1051:7:2",
                        "stateMutability": "nonpayable",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 418,
                  "initialValue": {
                    "arguments": [
                      {
                        "id": 416,
                        "name": "coll",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 401,
                        "src": "1074:4:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_NftCollection_$345",
                          "typeString": "contract NftCollection"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_contract$_NftCollection_$345",
                          "typeString": "contract NftCollection"
                        }
                      ],
                      "id": 415,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "lValueRequested": false,
                      "nodeType": "ElementaryTypeNameExpression",
                      "src": "1066:7:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_type$_t_address_$",
                        "typeString": "type(address)"
                      },
                      "typeName": {
                        "id": 414,
                        "name": "address",
                        "nodeType": "ElementaryTypeName",
                        "src": "1066:7:2",
                        "typeDescriptions": {}
                      }
                    },
                    "id": 417,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "typeConversion",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1066:13:2",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "1051:28:2"
                },
                {
                  "assignments": [
                    420
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 420,
                      "mutability": "mutable",
                      "name": "exists",
                      "nodeType": "VariableDeclaration",
                      "scope": 454,
                      "src": "1158:11:2",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      },
                      "typeName": {
                        "id": 419,
                        "name": "bool",
                        "nodeType": "ElementaryTypeName",
                        "src": "1158:4:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 428,
                  "initialValue": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 427,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "expression": {
                        "baseExpression": {
                          "id": 421,
                          "name": "_walletContracts",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 361,
                          "src": "1172:16:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_address_$_t_array$_t_address_$dyn_storage_$",
                            "typeString": "mapping(address => address[] storage ref)"
                          }
                        },
                        "id": 424,
                        "indexExpression": {
                          "expression": {
                            "id": 422,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4294967281,
                            "src": "1189:3:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 423,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "sender",
                          "nodeType": "MemberAccess",
                          "src": "1189:10:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "1172:28:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_address_$dyn_storage",
                          "typeString": "address[] storage ref"
                        }
                      },
                      "id": 425,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "length",
                      "nodeType": "MemberAccess",
                      "src": "1172:35:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": ">",
                    "rightExpression": {
                      "hexValue": "30",
                      "id": 426,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "1210:1:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_0_by_1",
                        "typeString": "int_const 0"
                      },
                      "value": "0"
                    },
                    "src": "1172:39:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "1158:53:2"
                },
                {
                  "condition": {
                    "id": 430,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "UnaryOperation",
                    "operator": "!",
                    "prefix": true,
                    "src": "1226:7:2",
                    "subExpression": {
                      "id": 429,
                      "name": "exists",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 420,
                      "src": "1227:6:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 439,
                  "nodeType": "IfStatement",
                  "src": "1222:112:2",
                  "trueBody": {
                    "id": 438,
                    "nodeType": "Block",
                    "src": "1235:99:2",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "expression": {
                                "id": 434,
                                "name": "msg",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 4294967281,
                                "src": "1311:3:2",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_magic_message",
                                  "typeString": "msg"
                                }
                              },
                              "id": 435,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "sender",
                              "nodeType": "MemberAccess",
                              "src": "1311:10:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            ],
                            "expression": {
                              "id": 431,
                              "name": "_wallets",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 364,
                              "src": "1297:8:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_array$_t_address_$dyn_storage",
                                "typeString": "address[] storage ref"
                              }
                            },
                            "id": 433,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "push",
                            "nodeType": "MemberAccess",
                            "src": "1297:13:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_arraypush_nonpayable$_t_address_$returns$__$",
                              "typeString": "function (address)"
                            }
                          },
                          "id": 436,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "1297:25:2",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 437,
                        "nodeType": "ExpressionStatement",
                        "src": "1297:25:2"
                      }
                    ]
                  }
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 445,
                        "name": "addr",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 413,
                        "src": "1434:4:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "expression": {
                        "baseExpression": {
                          "id": 440,
                          "name": "_walletContracts",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 361,
                          "src": "1400:16:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_address_$_t_array$_t_address_$dyn_storage_$",
                            "typeString": "mapping(address => address[] storage ref)"
                          }
                        },
                        "id": 443,
                        "indexExpression": {
                          "expression": {
                            "id": 441,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4294967281,
                            "src": "1417:3:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 442,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "sender",
                          "nodeType": "MemberAccess",
                          "src": "1417:10:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "1400:28:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_address_$dyn_storage",
                          "typeString": "address[] storage ref"
                        }
                      },
                      "id": 444,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "push",
                      "nodeType": "MemberAccess",
                      "src": "1400:33:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_arraypush_nonpayable$_t_address_$returns$__$",
                        "typeString": "function (address)"
                      }
                    },
                    "id": 446,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1400:39:2",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 447,
                  "nodeType": "ExpressionStatement",
                  "src": "1400:39:2"
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "expression": {
                          "id": 449,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 4294967281,
                          "src": "1475:3:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 450,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "1475:10:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 451,
                        "name": "addr",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 413,
                        "src": "1487:4:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 448,
                      "name": "CollectionCreated",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 370,
                      "src": "1457:17:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$returns$__$",
                        "typeString": "function (address,address)"
                      }
                    },
                    "id": 452,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1457:35:2",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 453,
                  "nodeType": "EmitStatement",
                  "src": "1452:40:2"
                }
              ]
            },
            "functionSelector": "4197ed74",
            "id": 455,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "createCollection",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 383,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 378,
                  "mutability": "mutable",
                  "name": "name",
                  "nodeType": "VariableDeclaration",
                  "scope": 455,
                  "src": "761:18:2",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 377,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "761:6:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 380,
                  "mutability": "mutable",
                  "name": "symbol",
                  "nodeType": "VariableDeclaration",
                  "scope": 455,
                  "src": "781:20:2",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 379,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "781:6:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 382,
                  "mutability": "mutable",
                  "name": "maxTokens",
                  "nodeType": "VariableDeclaration",
                  "scope": 455,
                  "src": "803:14:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 381,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "803:4:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "760:58:2"
            },
            "returnParameters": {
              "id": 384,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "836:0:2"
            },
            "scope": 557,
            "src": "735:765:2",
            "stateMutability": "payable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 463,
              "nodeType": "Block",
              "src": "1571:34:2",
              "statements": [
                {
                  "expression": {
                    "id": 461,
                    "name": "_wallets",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 364,
                    "src": "1589:8:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_address_$dyn_storage",
                      "typeString": "address[] storage ref"
                    }
                  },
                  "functionReturnParameters": 460,
                  "id": 462,
                  "nodeType": "Return",
                  "src": "1582:15:2"
                }
              ]
            },
            "functionSelector": "db7a4605",
            "id": 464,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "getWallets",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 456,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1527:2:2"
            },
            "returnParameters": {
              "id": 460,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 459,
                  "mutability": "mutable",
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 464,
                  "src": "1553:16:2",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                    "typeString": "address[]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 457,
                      "name": "address",
                      "nodeType": "ElementaryTypeName",
                      "src": "1553:7:2",
                      "stateMutability": "nonpayable",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "id": 458,
                    "nodeType": "ArrayTypeName",
                    "src": "1553:9:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
                      "typeString": "address[]"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1552:18:2"
            },
            "scope": 557,
            "src": "1508:97:2",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 476,
              "nodeType": "Block",
              "src": "1698:50:2",
              "statements": [
                {
                  "expression": {
                    "baseExpression": {
                      "id": 472,
                      "name": "_walletContracts",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 361,
                      "src": "1716:16:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_mapping$_t_address_$_t_array$_t_address_$dyn_storage_$",
                        "typeString": "mapping(address => address[] storage ref)"
                      }
                    },
                    "id": 474,
                    "indexExpression": {
                      "id": 473,
                      "name": "wallet",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 466,
                      "src": "1733:6:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "IndexAccess",
                    "src": "1716:24:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_address_$dyn_storage",
                      "typeString": "address[] storage ref"
                    }
                  },
                  "functionReturnParameters": 471,
                  "id": 475,
                  "nodeType": "Return",
                  "src": "1709:31:2"
                }
              ]
            },
            "functionSelector": "da8cac5a",
            "id": 477,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "getWalletContracts",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 467,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 466,
                  "mutability": "mutable",
                  "name": "wallet",
                  "nodeType": "VariableDeclaration",
                  "scope": 477,
                  "src": "1641:14:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 465,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1641:7:2",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1640:16:2"
            },
            "returnParameters": {
              "id": 471,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 470,
                  "mutability": "mutable",
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 477,
                  "src": "1680:16:2",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                    "typeString": "address[]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 468,
                      "name": "address",
                      "nodeType": "ElementaryTypeName",
                      "src": "1680:7:2",
                      "stateMutability": "nonpayable",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "id": 469,
                    "nodeType": "ArrayTypeName",
                    "src": "1680:9:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
                      "typeString": "address[]"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1679:18:2"
            },
            "scope": 557,
            "src": "1613:135:2",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 484,
              "nodeType": "Block",
              "src": "1957:32:2",
              "statements": [
                {
                  "expression": {
                    "id": 482,
                    "name": "_price",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 354,
                    "src": "1975:6:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "functionReturnParameters": 481,
                  "id": 483,
                  "nodeType": "Return",
                  "src": "1968:13:2"
                }
              ]
            },
            "functionSelector": "eb91d37e",
            "id": 485,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "getCurrentPrice",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 478,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1922:2:2"
            },
            "returnParameters": {
              "id": 481,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 480,
                  "mutability": "mutable",
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 485,
                  "src": "1948:7:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 479,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1948:7:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1947:9:2"
            },
            "scope": 557,
            "src": "1898:91:2",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 503,
              "nodeType": "Block",
              "src": "2055:112:2",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 495,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 493,
                          "name": "newPrice",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 487,
                          "src": "2074:8:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": ">=",
                        "rightExpression": {
                          "hexValue": "30",
                          "id": 494,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "2086:1:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        },
                        "src": "2074:13:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "746865206e65772070726963652063616e206e6f74206265206c657373207468616e207a65726f",
                        "id": 496,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "2089:41:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_4a282d1a1eae2ee0c7c30408c3db77be9a777efe1c06f4dd8330fab3308ef30b",
                          "typeString": "literal_string \"the new price can not be less than zero\""
                        },
                        "value": "the new price can not be less than zero"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_4a282d1a1eae2ee0c7c30408c3db77be9a777efe1c06f4dd8330fab3308ef30b",
                          "typeString": "literal_string \"the new price can not be less than zero\""
                        }
                      ],
                      "id": 492,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "2066:7:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 497,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2066:65:2",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 498,
                  "nodeType": "ExpressionStatement",
                  "src": "2066:65:2"
                },
                {
                  "expression": {
                    "id": 501,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 499,
                      "name": "_price",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 354,
                      "src": "2142:6:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 500,
                      "name": "newPrice",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 487,
                      "src": "2151:8:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "2142:17:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 502,
                  "nodeType": "ExpressionStatement",
                  "src": "2142:17:2"
                }
              ]
            },
            "functionSelector": "8d6cc56d",
            "id": 504,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 490,
                "modifierName": {
                  "id": 489,
                  "name": "onlyOwner",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 616,
                  "src": "2045:9:2"
                },
                "nodeType": "ModifierInvocation",
                "src": "2045:9:2"
              }
            ],
            "name": "updatePrice",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 488,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 487,
                  "mutability": "mutable",
                  "name": "newPrice",
                  "nodeType": "VariableDeclaration",
                  "scope": 504,
                  "src": "2018:16:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 486,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "2018:7:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2017:18:2"
            },
            "returnParameters": {
              "id": 491,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2055:0:2"
            },
            "scope": 557,
            "src": "1997:170:2",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 517,
              "nodeType": "Block",
              "src": "2236:47:2",
              "statements": [
                {
                  "expression": {
                    "expression": {
                      "arguments": [
                        {
                          "id": 513,
                          "name": "this",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 4294967268,
                          "src": "2262:4:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_NftFactory_$557",
                            "typeString": "contract NftFactory"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_contract$_NftFactory_$557",
                            "typeString": "contract NftFactory"
                          }
                        ],
                        "id": 512,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "nodeType": "ElementaryTypeNameExpression",
                        "src": "2254:7:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_address_$",
                          "typeString": "type(address)"
                        },
                        "typeName": {
                          "id": 511,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "2254:7:2",
                          "typeDescriptions": {}
                        }
                      },
                      "id": 514,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "typeConversion",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "2254:13:2",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "id": 515,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "memberName": "balance",
                    "nodeType": "MemberAccess",
                    "src": "2254:21:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "functionReturnParameters": 510,
                  "id": 516,
                  "nodeType": "Return",
                  "src": "2247:28:2"
                }
              ]
            },
            "functionSelector": "12065fe0",
            "id": 518,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 507,
                "modifierName": {
                  "id": 506,
                  "name": "onlyOwner",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 616,
                  "src": "2211:9:2"
                },
                "nodeType": "ModifierInvocation",
                "src": "2211:9:2"
              }
            ],
            "name": "getBalance",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 505,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2194:2:2"
            },
            "returnParameters": {
              "id": 510,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 509,
                  "mutability": "mutable",
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 518,
                  "src": "2230:4:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 508,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "2230:4:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2229:6:2"
            },
            "scope": 557,
            "src": "2175:108:2",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 555,
              "nodeType": "Block",
              "src": "2353:252:2",
              "statements": [
                {
                  "assignments": [
                    528
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 528,
                      "mutability": "mutable",
                      "name": "bal",
                      "nodeType": "VariableDeclaration",
                      "scope": 555,
                      "src": "2424:8:2",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 527,
                        "name": "uint",
                        "nodeType": "ElementaryTypeName",
                        "src": "2424:4:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 534,
                  "initialValue": {
                    "expression": {
                      "arguments": [
                        {
                          "id": 531,
                          "name": "this",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 4294967268,
                          "src": "2443:4:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_NftFactory_$557",
                            "typeString": "contract NftFactory"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_contract$_NftFactory_$557",
                            "typeString": "contract NftFactory"
                          }
                        ],
                        "id": 530,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "nodeType": "ElementaryTypeNameExpression",
                        "src": "2435:7:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_address_$",
                          "typeString": "type(address)"
                        },
                        "typeName": {
                          "id": 529,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "2435:7:2",
                          "typeDescriptions": {}
                        }
                      },
                      "id": 532,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "typeConversion",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "2435:13:2",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "id": 533,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "memberName": "balance",
                    "nodeType": "MemberAccess",
                    "src": "2435:21:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "2424:32:2"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 538,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 536,
                          "name": "bal",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 528,
                          "src": "2475:3:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": ">",
                        "rightExpression": {
                          "id": 537,
                          "name": "amount",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 522,
                          "src": "2481:6:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "2475:12:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "616d6f756e742063616e6e6f74206578636565642062616c616e6365",
                        "id": 539,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "2489:30:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_3f0253308a39e35a7e906ec6a9f783a7fb912dcdb791d15e6fb25a299ba4c266",
                          "typeString": "literal_string \"amount cannot exceed balance\""
                        },
                        "value": "amount cannot exceed balance"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_3f0253308a39e35a7e906ec6a9f783a7fb912dcdb791d15e6fb25a299ba4c266",
                          "typeString": "literal_string \"amount cannot exceed balance\""
                        }
                      ],
                      "id": 535,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "2467:7:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 540,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2467:53:2",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 541,
                  "nodeType": "ExpressionStatement",
                  "src": "2467:53:2"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 547,
                        "name": "amount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 522,
                        "src": "2552:6:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "arguments": [
                          {
                            "id": 544,
                            "name": "to",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 520,
                            "src": "2539:2:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "id": 543,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "2531:8:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_payable_$",
                            "typeString": "type(address payable)"
                          },
                          "typeName": {
                            "id": 542,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "2531:8:2",
                            "stateMutability": "payable",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 545,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "2531:11:2",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      "id": 546,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "transfer",
                      "nodeType": "MemberAccess",
                      "src": "2531:20:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_transfer_nonpayable$_t_uint256_$returns$__$",
                        "typeString": "function (uint256)"
                      }
                    },
                    "id": 548,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2531:28:2",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 549,
                  "nodeType": "ExpressionStatement",
                  "src": "2531:28:2"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 551,
                        "name": "to",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 520,
                        "src": "2586:2:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 552,
                        "name": "amount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 522,
                        "src": "2590:6:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 550,
                      "name": "OwnerWithdrawal",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 376,
                      "src": "2570:15:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,uint256)"
                      }
                    },
                    "id": 553,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2570:27:2",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 554,
                  "nodeType": "ExpressionStatement",
                  "src": "2570:27:2"
                }
              ]
            },
            "functionSelector": "f3fef3a3",
            "id": 556,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 525,
                "modifierName": {
                  "id": 524,
                  "name": "onlyOwner",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 616,
                  "src": "2343:9:2"
                },
                "nodeType": "ModifierInvocation",
                "src": "2343:9:2"
              }
            ],
            "name": "withdraw",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 523,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 520,
                  "mutability": "mutable",
                  "name": "to",
                  "nodeType": "VariableDeclaration",
                  "scope": 556,
                  "src": "2309:10:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 519,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "2309:7:2",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 522,
                  "mutability": "mutable",
                  "name": "amount",
                  "nodeType": "VariableDeclaration",
                  "scope": 556,
                  "src": "2321:11:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 521,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "2321:4:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2308:25:2"
            },
            "returnParameters": {
              "id": 526,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2353:0:2"
            },
            "scope": 557,
            "src": "2291:314:2",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          }
        ],
        "scope": 558,
        "src": "147:2461:2"
      }
    ],
    "src": "33:2577:2"
  },
  "legacyAST": {
    "absolutePath": "/C/__/NFT/nft-minter/solidity/contracts/NftFactory.sol",
    "exportedSymbols": {
      "Address": [
        2314
      ],
      "Context": [
        2337
      ],
      "ERC165": [
        2564
      ],
      "ERC721": [
        1488
      ],
      "ERC721Enumerable": [
        1960
      ],
      "IERC165": [
        2576
      ],
      "IERC721": [
        1604
      ],
      "IERC721Enumerable": [
        1991
      ],
      "IERC721Metadata": [
        2018
      ],
      "IERC721Receiver": [
        1622
      ],
      "NftCollection": [
        345
      ],
      "NftFactory": [
        557
      ],
      "Ownable": [
        667
      ],
      "Strings": [
        2540
      ]
    },
    "id": 558,
    "license": "MIT",
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 347,
        "literals": [
          "solidity",
          "^",
          "0.8",
          ".0"
        ],
        "nodeType": "PragmaDirective",
        "src": "33:23:2"
      },
      {
        "absolutePath": "@openzeppelin/contracts/access/Ownable.sol",
        "file": "@openzeppelin/contracts/access/Ownable.sol",
        "id": 348,
        "nodeType": "ImportDirective",
        "scope": 558,
        "sourceUnit": 668,
        "src": "60:52:2",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "/C/__/NFT/nft-minter/solidity/contracts/NftCollection.sol",
        "file": "./NftCollection.sol",
        "id": 349,
        "nodeType": "ImportDirective",
        "scope": 558,
        "sourceUnit": 346,
        "src": "114:29:2",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "abstract": false,
        "baseContracts": [
          {
            "baseName": {
              "id": 350,
              "name": "Ownable",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 667,
              "src": "170:7:2"
            },
            "id": 351,
            "nodeType": "InheritanceSpecifier",
            "src": "170:7:2"
          }
        ],
        "contractDependencies": [
          345,
          667,
          2337
        ],
        "contractKind": "contract",
        "fullyImplemented": true,
        "id": 557,
        "linearizedBaseContracts": [
          557,
          667,
          2337
        ],
        "name": "NftFactory",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "constant": false,
            "id": 354,
            "mutability": "mutable",
            "name": "_price",
            "nodeType": "VariableDeclaration",
            "scope": 557,
            "src": "185:44:2",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 352,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "185:7:2",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "value": {
              "hexValue": "31303030303030303030303030303030303030",
              "id": 353,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "number",
              "lValueRequested": false,
              "nodeType": "Literal",
              "src": "210:19:2",
              "typeDescriptions": {
                "typeIdentifier": "t_rational_1000000000000000000_by_1",
                "typeString": "int_const 1000000000000000000"
              },
              "value": "1000000000000000000"
            },
            "visibility": "private"
          },
          {
            "constant": false,
            "id": 356,
            "mutability": "mutable",
            "name": "_owner",
            "nodeType": "VariableDeclaration",
            "scope": 557,
            "src": "236:22:2",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_address",
              "typeString": "address"
            },
            "typeName": {
              "id": 355,
              "name": "address",
              "nodeType": "ElementaryTypeName",
              "src": "236:7:2",
              "stateMutability": "nonpayable",
              "typeDescriptions": {
                "typeIdentifier": "t_address",
                "typeString": "address"
              }
            },
            "visibility": "private"
          },
          {
            "constant": false,
            "id": 361,
            "mutability": "mutable",
            "name": "_walletContracts",
            "nodeType": "VariableDeclaration",
            "scope": 557,
            "src": "267:55:2",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_address_$_t_array$_t_address_$dyn_storage_$",
              "typeString": "mapping(address => address[])"
            },
            "typeName": {
              "id": 360,
              "keyType": {
                "id": 357,
                "name": "address",
                "nodeType": "ElementaryTypeName",
                "src": "276:7:2",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                }
              },
              "nodeType": "Mapping",
              "src": "267:30:2",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_address_$_t_array$_t_address_$dyn_storage_$",
                "typeString": "mapping(address => address[])"
              },
              "valueType": {
                "baseType": {
                  "id": 358,
                  "name": "address",
                  "nodeType": "ElementaryTypeName",
                  "src": "287:7:2",
                  "stateMutability": "nonpayable",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  }
                },
                "id": 359,
                "nodeType": "ArrayTypeName",
                "src": "287:9:2",
                "typeDescriptions": {
                  "typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
                  "typeString": "address[]"
                }
              }
            },
            "visibility": "private"
          },
          {
            "constant": false,
            "id": 364,
            "mutability": "mutable",
            "name": "_wallets",
            "nodeType": "VariableDeclaration",
            "scope": 557,
            "src": "329:26:2",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_array$_t_address_$dyn_storage",
              "typeString": "address[]"
            },
            "typeName": {
              "baseType": {
                "id": 362,
                "name": "address",
                "nodeType": "ElementaryTypeName",
                "src": "329:7:2",
                "stateMutability": "nonpayable",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                }
              },
              "id": 363,
              "nodeType": "ArrayTypeName",
              "src": "329:9:2",
              "typeDescriptions": {
                "typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
                "typeString": "address[]"
              }
            },
            "visibility": "private"
          },
          {
            "anonymous": false,
            "id": 370,
            "name": "CollectionCreated",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 369,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 366,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "owner",
                  "nodeType": "VariableDeclaration",
                  "scope": 370,
                  "src": "388:13:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 365,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "388:7:2",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 368,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "contractAddress",
                  "nodeType": "VariableDeclaration",
                  "scope": 370,
                  "src": "403:23:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 367,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "403:7:2",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "387:40:2"
            },
            "src": "364:64:2"
          },
          {
            "anonymous": false,
            "id": 376,
            "name": "OwnerWithdrawal",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 375,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 372,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "owner",
                  "nodeType": "VariableDeclaration",
                  "scope": 376,
                  "src": "456:13:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 371,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "456:7:2",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 374,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "amount",
                  "nodeType": "VariableDeclaration",
                  "scope": 376,
                  "src": "471:11:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 373,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "471:4:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "455:28:2"
            },
            "src": "434:50:2"
          },
          {
            "body": {
              "id": 454,
              "nodeType": "Block",
              "src": "836:664:2",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 389,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "expression": {
                            "id": 386,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4294967281,
                            "src": "857:3:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 387,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "value",
                          "nodeType": "MemberAccess",
                          "src": "857:9:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": ">=",
                        "rightExpression": {
                          "id": 388,
                          "name": "_price",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 354,
                          "src": "870:6:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "857:19:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "hexValue": "54686520707269636520746f20637265617465206120636f6c6c656374696f6e20776173206e6f74206d65742e",
                                "id": 394,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "string",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "902:47:2",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_stringliteral_593b7312de750c8070ddc6e535aae7177f6d680dbdadb33177976809c71a2df2",
                                  "typeString": "literal_string \"The price to create a collection was not met.\""
                                },
                                "value": "The price to create a collection was not met."
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_stringliteral_593b7312de750c8070ddc6e535aae7177f6d680dbdadb33177976809c71a2df2",
                                  "typeString": "literal_string \"The price to create a collection was not met.\""
                                }
                              ],
                              "expression": {
                                "id": 392,
                                "name": "abi",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 4294967295,
                                "src": "885:3:2",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_magic_abi",
                                  "typeString": "abi"
                                }
                              },
                              "id": 393,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "memberName": "encodePacked",
                              "nodeType": "MemberAccess",
                              "src": "885:16:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_abiencodepacked_pure$__$returns$_t_bytes_memory_ptr_$",
                                "typeString": "function () pure returns (bytes memory)"
                              }
                            },
                            "id": 395,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "885:65:2",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes_memory_ptr",
                              "typeString": "bytes memory"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_bytes_memory_ptr",
                              "typeString": "bytes memory"
                            }
                          ],
                          "id": 391,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "878:6:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_string_storage_ptr_$",
                            "typeString": "type(string storage pointer)"
                          },
                          "typeName": {
                            "id": 390,
                            "name": "string",
                            "nodeType": "ElementaryTypeName",
                            "src": "878:6:2",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 396,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "878:73:2",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        }
                      ],
                      "id": 385,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "849:7:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 397,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "849:103:2",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 398,
                  "nodeType": "ExpressionStatement",
                  "src": "849:103:2"
                },
                {
                  "assignments": [
                    401
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 401,
                      "mutability": "mutable",
                      "name": "coll",
                      "nodeType": "VariableDeclaration",
                      "scope": 454,
                      "src": "965:18:2",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_NftCollection_$345",
                        "typeString": "contract NftCollection"
                      },
                      "typeName": {
                        "id": 400,
                        "nodeType": "UserDefinedTypeName",
                        "pathNode": {
                          "id": 399,
                          "name": "NftCollection",
                          "nodeType": "IdentifierPath",
                          "referencedDeclaration": 345,
                          "src": "965:13:2"
                        },
                        "referencedDeclaration": 345,
                        "src": "965:13:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_NftCollection_$345",
                          "typeString": "contract NftCollection"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 411,
                  "initialValue": {
                    "arguments": [
                      {
                        "id": 405,
                        "name": "name",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 378,
                        "src": "1004:4:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        }
                      },
                      {
                        "id": 406,
                        "name": "symbol",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 380,
                        "src": "1010:6:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        }
                      },
                      {
                        "id": 407,
                        "name": "maxTokens",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 382,
                        "src": "1018:9:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "expression": {
                          "id": 408,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 4294967281,
                          "src": "1029:3:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 409,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "1029:10:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        },
                        {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 404,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "NewExpression",
                      "src": "986:17:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_creation_nonpayable$_t_string_memory_ptr_$_t_string_memory_ptr_$_t_uint256_$_t_address_$returns$_t_contract$_NftCollection_$345_$",
                        "typeString": "function (string memory,string memory,uint256,address) returns (contract NftCollection)"
                      },
                      "typeName": {
                        "id": 403,
                        "nodeType": "UserDefinedTypeName",
                        "pathNode": {
                          "id": 402,
                          "name": "NftCollection",
                          "nodeType": "IdentifierPath",
                          "referencedDeclaration": 345,
                          "src": "990:13:2"
                        },
                        "referencedDeclaration": 345,
                        "src": "990:13:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_NftCollection_$345",
                          "typeString": "contract NftCollection"
                        }
                      }
                    },
                    "id": 410,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "986:54:2",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_NftCollection_$345",
                      "typeString": "contract NftCollection"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "965:75:2"
                },
                {
                  "assignments": [
                    413
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 413,
                      "mutability": "mutable",
                      "name": "addr",
                      "nodeType": "VariableDeclaration",
                      "scope": 454,
                      "src": "1051:12:2",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      },
                      "typeName": {
                        "id": 412,
                        "name": "address",
                        "nodeType": "ElementaryTypeName",
                        "src": "1051:7:2",
                        "stateMutability": "nonpayable",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 418,
                  "initialValue": {
                    "arguments": [
                      {
                        "id": 416,
                        "name": "coll",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 401,
                        "src": "1074:4:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_NftCollection_$345",
                          "typeString": "contract NftCollection"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_contract$_NftCollection_$345",
                          "typeString": "contract NftCollection"
                        }
                      ],
                      "id": 415,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "lValueRequested": false,
                      "nodeType": "ElementaryTypeNameExpression",
                      "src": "1066:7:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_type$_t_address_$",
                        "typeString": "type(address)"
                      },
                      "typeName": {
                        "id": 414,
                        "name": "address",
                        "nodeType": "ElementaryTypeName",
                        "src": "1066:7:2",
                        "typeDescriptions": {}
                      }
                    },
                    "id": 417,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "typeConversion",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1066:13:2",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "1051:28:2"
                },
                {
                  "assignments": [
                    420
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 420,
                      "mutability": "mutable",
                      "name": "exists",
                      "nodeType": "VariableDeclaration",
                      "scope": 454,
                      "src": "1158:11:2",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      },
                      "typeName": {
                        "id": 419,
                        "name": "bool",
                        "nodeType": "ElementaryTypeName",
                        "src": "1158:4:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 428,
                  "initialValue": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 427,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "expression": {
                        "baseExpression": {
                          "id": 421,
                          "name": "_walletContracts",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 361,
                          "src": "1172:16:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_address_$_t_array$_t_address_$dyn_storage_$",
                            "typeString": "mapping(address => address[] storage ref)"
                          }
                        },
                        "id": 424,
                        "indexExpression": {
                          "expression": {
                            "id": 422,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4294967281,
                            "src": "1189:3:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 423,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "sender",
                          "nodeType": "MemberAccess",
                          "src": "1189:10:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "1172:28:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_address_$dyn_storage",
                          "typeString": "address[] storage ref"
                        }
                      },
                      "id": 425,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "length",
                      "nodeType": "MemberAccess",
                      "src": "1172:35:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": ">",
                    "rightExpression": {
                      "hexValue": "30",
                      "id": 426,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "1210:1:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_0_by_1",
                        "typeString": "int_const 0"
                      },
                      "value": "0"
                    },
                    "src": "1172:39:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "1158:53:2"
                },
                {
                  "condition": {
                    "id": 430,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "UnaryOperation",
                    "operator": "!",
                    "prefix": true,
                    "src": "1226:7:2",
                    "subExpression": {
                      "id": 429,
                      "name": "exists",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 420,
                      "src": "1227:6:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 439,
                  "nodeType": "IfStatement",
                  "src": "1222:112:2",
                  "trueBody": {
                    "id": 438,
                    "nodeType": "Block",
                    "src": "1235:99:2",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "expression": {
                                "id": 434,
                                "name": "msg",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 4294967281,
                                "src": "1311:3:2",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_magic_message",
                                  "typeString": "msg"
                                }
                              },
                              "id": 435,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "sender",
                              "nodeType": "MemberAccess",
                              "src": "1311:10:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            ],
                            "expression": {
                              "id": 431,
                              "name": "_wallets",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 364,
                              "src": "1297:8:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_array$_t_address_$dyn_storage",
                                "typeString": "address[] storage ref"
                              }
                            },
                            "id": 433,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "push",
                            "nodeType": "MemberAccess",
                            "src": "1297:13:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_arraypush_nonpayable$_t_address_$returns$__$",
                              "typeString": "function (address)"
                            }
                          },
                          "id": 436,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "1297:25:2",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 437,
                        "nodeType": "ExpressionStatement",
                        "src": "1297:25:2"
                      }
                    ]
                  }
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 445,
                        "name": "addr",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 413,
                        "src": "1434:4:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "expression": {
                        "baseExpression": {
                          "id": 440,
                          "name": "_walletContracts",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 361,
                          "src": "1400:16:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_address_$_t_array$_t_address_$dyn_storage_$",
                            "typeString": "mapping(address => address[] storage ref)"
                          }
                        },
                        "id": 443,
                        "indexExpression": {
                          "expression": {
                            "id": 441,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4294967281,
                            "src": "1417:3:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 442,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "sender",
                          "nodeType": "MemberAccess",
                          "src": "1417:10:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "1400:28:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_address_$dyn_storage",
                          "typeString": "address[] storage ref"
                        }
                      },
                      "id": 444,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "push",
                      "nodeType": "MemberAccess",
                      "src": "1400:33:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_arraypush_nonpayable$_t_address_$returns$__$",
                        "typeString": "function (address)"
                      }
                    },
                    "id": 446,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1400:39:2",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 447,
                  "nodeType": "ExpressionStatement",
                  "src": "1400:39:2"
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "expression": {
                          "id": 449,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 4294967281,
                          "src": "1475:3:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 450,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "1475:10:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 451,
                        "name": "addr",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 413,
                        "src": "1487:4:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 448,
                      "name": "CollectionCreated",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 370,
                      "src": "1457:17:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$returns$__$",
                        "typeString": "function (address,address)"
                      }
                    },
                    "id": 452,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1457:35:2",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 453,
                  "nodeType": "EmitStatement",
                  "src": "1452:40:2"
                }
              ]
            },
            "functionSelector": "4197ed74",
            "id": 455,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "createCollection",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 383,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 378,
                  "mutability": "mutable",
                  "name": "name",
                  "nodeType": "VariableDeclaration",
                  "scope": 455,
                  "src": "761:18:2",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 377,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "761:6:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 380,
                  "mutability": "mutable",
                  "name": "symbol",
                  "nodeType": "VariableDeclaration",
                  "scope": 455,
                  "src": "781:20:2",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 379,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "781:6:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 382,
                  "mutability": "mutable",
                  "name": "maxTokens",
                  "nodeType": "VariableDeclaration",
                  "scope": 455,
                  "src": "803:14:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 381,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "803:4:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "760:58:2"
            },
            "returnParameters": {
              "id": 384,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "836:0:2"
            },
            "scope": 557,
            "src": "735:765:2",
            "stateMutability": "payable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 463,
              "nodeType": "Block",
              "src": "1571:34:2",
              "statements": [
                {
                  "expression": {
                    "id": 461,
                    "name": "_wallets",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 364,
                    "src": "1589:8:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_address_$dyn_storage",
                      "typeString": "address[] storage ref"
                    }
                  },
                  "functionReturnParameters": 460,
                  "id": 462,
                  "nodeType": "Return",
                  "src": "1582:15:2"
                }
              ]
            },
            "functionSelector": "db7a4605",
            "id": 464,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "getWallets",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 456,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1527:2:2"
            },
            "returnParameters": {
              "id": 460,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 459,
                  "mutability": "mutable",
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 464,
                  "src": "1553:16:2",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                    "typeString": "address[]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 457,
                      "name": "address",
                      "nodeType": "ElementaryTypeName",
                      "src": "1553:7:2",
                      "stateMutability": "nonpayable",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "id": 458,
                    "nodeType": "ArrayTypeName",
                    "src": "1553:9:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
                      "typeString": "address[]"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1552:18:2"
            },
            "scope": 557,
            "src": "1508:97:2",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 476,
              "nodeType": "Block",
              "src": "1698:50:2",
              "statements": [
                {
                  "expression": {
                    "baseExpression": {
                      "id": 472,
                      "name": "_walletContracts",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 361,
                      "src": "1716:16:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_mapping$_t_address_$_t_array$_t_address_$dyn_storage_$",
                        "typeString": "mapping(address => address[] storage ref)"
                      }
                    },
                    "id": 474,
                    "indexExpression": {
                      "id": 473,
                      "name": "wallet",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 466,
                      "src": "1733:6:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "IndexAccess",
                    "src": "1716:24:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_address_$dyn_storage",
                      "typeString": "address[] storage ref"
                    }
                  },
                  "functionReturnParameters": 471,
                  "id": 475,
                  "nodeType": "Return",
                  "src": "1709:31:2"
                }
              ]
            },
            "functionSelector": "da8cac5a",
            "id": 477,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "getWalletContracts",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 467,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 466,
                  "mutability": "mutable",
                  "name": "wallet",
                  "nodeType": "VariableDeclaration",
                  "scope": 477,
                  "src": "1641:14:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 465,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1641:7:2",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1640:16:2"
            },
            "returnParameters": {
              "id": 471,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 470,
                  "mutability": "mutable",
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 477,
                  "src": "1680:16:2",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                    "typeString": "address[]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 468,
                      "name": "address",
                      "nodeType": "ElementaryTypeName",
                      "src": "1680:7:2",
                      "stateMutability": "nonpayable",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "id": 469,
                    "nodeType": "ArrayTypeName",
                    "src": "1680:9:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
                      "typeString": "address[]"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1679:18:2"
            },
            "scope": 557,
            "src": "1613:135:2",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 484,
              "nodeType": "Block",
              "src": "1957:32:2",
              "statements": [
                {
                  "expression": {
                    "id": 482,
                    "name": "_price",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 354,
                    "src": "1975:6:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "functionReturnParameters": 481,
                  "id": 483,
                  "nodeType": "Return",
                  "src": "1968:13:2"
                }
              ]
            },
            "functionSelector": "eb91d37e",
            "id": 485,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "getCurrentPrice",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 478,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1922:2:2"
            },
            "returnParameters": {
              "id": 481,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 480,
                  "mutability": "mutable",
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 485,
                  "src": "1948:7:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 479,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1948:7:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1947:9:2"
            },
            "scope": 557,
            "src": "1898:91:2",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 503,
              "nodeType": "Block",
              "src": "2055:112:2",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 495,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 493,
                          "name": "newPrice",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 487,
                          "src": "2074:8:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": ">=",
                        "rightExpression": {
                          "hexValue": "30",
                          "id": 494,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "2086:1:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        },
                        "src": "2074:13:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "746865206e65772070726963652063616e206e6f74206265206c657373207468616e207a65726f",
                        "id": 496,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "2089:41:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_4a282d1a1eae2ee0c7c30408c3db77be9a777efe1c06f4dd8330fab3308ef30b",
                          "typeString": "literal_string \"the new price can not be less than zero\""
                        },
                        "value": "the new price can not be less than zero"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_4a282d1a1eae2ee0c7c30408c3db77be9a777efe1c06f4dd8330fab3308ef30b",
                          "typeString": "literal_string \"the new price can not be less than zero\""
                        }
                      ],
                      "id": 492,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "2066:7:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 497,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2066:65:2",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 498,
                  "nodeType": "ExpressionStatement",
                  "src": "2066:65:2"
                },
                {
                  "expression": {
                    "id": 501,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 499,
                      "name": "_price",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 354,
                      "src": "2142:6:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 500,
                      "name": "newPrice",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 487,
                      "src": "2151:8:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "2142:17:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 502,
                  "nodeType": "ExpressionStatement",
                  "src": "2142:17:2"
                }
              ]
            },
            "functionSelector": "8d6cc56d",
            "id": 504,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 490,
                "modifierName": {
                  "id": 489,
                  "name": "onlyOwner",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 616,
                  "src": "2045:9:2"
                },
                "nodeType": "ModifierInvocation",
                "src": "2045:9:2"
              }
            ],
            "name": "updatePrice",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 488,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 487,
                  "mutability": "mutable",
                  "name": "newPrice",
                  "nodeType": "VariableDeclaration",
                  "scope": 504,
                  "src": "2018:16:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 486,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "2018:7:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2017:18:2"
            },
            "returnParameters": {
              "id": 491,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2055:0:2"
            },
            "scope": 557,
            "src": "1997:170:2",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 517,
              "nodeType": "Block",
              "src": "2236:47:2",
              "statements": [
                {
                  "expression": {
                    "expression": {
                      "arguments": [
                        {
                          "id": 513,
                          "name": "this",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 4294967268,
                          "src": "2262:4:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_NftFactory_$557",
                            "typeString": "contract NftFactory"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_contract$_NftFactory_$557",
                            "typeString": "contract NftFactory"
                          }
                        ],
                        "id": 512,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "nodeType": "ElementaryTypeNameExpression",
                        "src": "2254:7:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_address_$",
                          "typeString": "type(address)"
                        },
                        "typeName": {
                          "id": 511,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "2254:7:2",
                          "typeDescriptions": {}
                        }
                      },
                      "id": 514,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "typeConversion",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "2254:13:2",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "id": 515,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "memberName": "balance",
                    "nodeType": "MemberAccess",
                    "src": "2254:21:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "functionReturnParameters": 510,
                  "id": 516,
                  "nodeType": "Return",
                  "src": "2247:28:2"
                }
              ]
            },
            "functionSelector": "12065fe0",
            "id": 518,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 507,
                "modifierName": {
                  "id": 506,
                  "name": "onlyOwner",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 616,
                  "src": "2211:9:2"
                },
                "nodeType": "ModifierInvocation",
                "src": "2211:9:2"
              }
            ],
            "name": "getBalance",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 505,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2194:2:2"
            },
            "returnParameters": {
              "id": 510,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 509,
                  "mutability": "mutable",
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 518,
                  "src": "2230:4:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 508,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "2230:4:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2229:6:2"
            },
            "scope": 557,
            "src": "2175:108:2",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 555,
              "nodeType": "Block",
              "src": "2353:252:2",
              "statements": [
                {
                  "assignments": [
                    528
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 528,
                      "mutability": "mutable",
                      "name": "bal",
                      "nodeType": "VariableDeclaration",
                      "scope": 555,
                      "src": "2424:8:2",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 527,
                        "name": "uint",
                        "nodeType": "ElementaryTypeName",
                        "src": "2424:4:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 534,
                  "initialValue": {
                    "expression": {
                      "arguments": [
                        {
                          "id": 531,
                          "name": "this",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 4294967268,
                          "src": "2443:4:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_NftFactory_$557",
                            "typeString": "contract NftFactory"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_contract$_NftFactory_$557",
                            "typeString": "contract NftFactory"
                          }
                        ],
                        "id": 530,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "nodeType": "ElementaryTypeNameExpression",
                        "src": "2435:7:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_address_$",
                          "typeString": "type(address)"
                        },
                        "typeName": {
                          "id": 529,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "2435:7:2",
                          "typeDescriptions": {}
                        }
                      },
                      "id": 532,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "typeConversion",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "2435:13:2",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "id": 533,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "memberName": "balance",
                    "nodeType": "MemberAccess",
                    "src": "2435:21:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "2424:32:2"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 538,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 536,
                          "name": "bal",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 528,
                          "src": "2475:3:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": ">",
                        "rightExpression": {
                          "id": 537,
                          "name": "amount",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 522,
                          "src": "2481:6:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "2475:12:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "616d6f756e742063616e6e6f74206578636565642062616c616e6365",
                        "id": 539,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "2489:30:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_3f0253308a39e35a7e906ec6a9f783a7fb912dcdb791d15e6fb25a299ba4c266",
                          "typeString": "literal_string \"amount cannot exceed balance\""
                        },
                        "value": "amount cannot exceed balance"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_3f0253308a39e35a7e906ec6a9f783a7fb912dcdb791d15e6fb25a299ba4c266",
                          "typeString": "literal_string \"amount cannot exceed balance\""
                        }
                      ],
                      "id": 535,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "2467:7:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 540,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2467:53:2",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 541,
                  "nodeType": "ExpressionStatement",
                  "src": "2467:53:2"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 547,
                        "name": "amount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 522,
                        "src": "2552:6:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "arguments": [
                          {
                            "id": 544,
                            "name": "to",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 520,
                            "src": "2539:2:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "id": 543,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "2531:8:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_payable_$",
                            "typeString": "type(address payable)"
                          },
                          "typeName": {
                            "id": 542,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "2531:8:2",
                            "stateMutability": "payable",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 545,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "2531:11:2",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      "id": 546,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "transfer",
                      "nodeType": "MemberAccess",
                      "src": "2531:20:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_transfer_nonpayable$_t_uint256_$returns$__$",
                        "typeString": "function (uint256)"
                      }
                    },
                    "id": 548,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2531:28:2",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 549,
                  "nodeType": "ExpressionStatement",
                  "src": "2531:28:2"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 551,
                        "name": "to",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 520,
                        "src": "2586:2:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 552,
                        "name": "amount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 522,
                        "src": "2590:6:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 550,
                      "name": "OwnerWithdrawal",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 376,
                      "src": "2570:15:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,uint256)"
                      }
                    },
                    "id": 553,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2570:27:2",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 554,
                  "nodeType": "ExpressionStatement",
                  "src": "2570:27:2"
                }
              ]
            },
            "functionSelector": "f3fef3a3",
            "id": 556,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 525,
                "modifierName": {
                  "id": 524,
                  "name": "onlyOwner",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 616,
                  "src": "2343:9:2"
                },
                "nodeType": "ModifierInvocation",
                "src": "2343:9:2"
              }
            ],
            "name": "withdraw",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 523,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 520,
                  "mutability": "mutable",
                  "name": "to",
                  "nodeType": "VariableDeclaration",
                  "scope": 556,
                  "src": "2309:10:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 519,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "2309:7:2",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 522,
                  "mutability": "mutable",
                  "name": "amount",
                  "nodeType": "VariableDeclaration",
                  "scope": 556,
                  "src": "2321:11:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 521,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "2321:4:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2308:25:2"
            },
            "returnParameters": {
              "id": 526,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2353:0:2"
            },
            "scope": 557,
            "src": "2291:314:2",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          }
        ],
        "scope": 558,
        "src": "147:2461:2"
      }
    ],
    "src": "33:2577:2"
  },
  "compiler": {
    "name": "solc",
    "version": "0.8.0+commit.c7dfd78e.Emscripten.clang"
  },
  "networks": {
    "5777": {
      "events": {
        "0x5d0de243db1669e3a7056744cd715c625f0c1c348736c2c2d53d0ddebff1a6c7": {
          "anonymous": false,
          "inputs": [
            {
              "indexed": false,
              "internalType": "address",
              "name": "owner",
              "type": "address"
            },
            {
              "indexed": false,
              "internalType": "address",
              "name": "contractAddress",
              "type": "address"
            }
          ],
          "name": "CollectionCreated",
          "type": "event"
        },
        "0xa919fadcfa556a012bab31b15f596ea7ccd397adbf10e15f176db9055ab361c4": {
          "anonymous": false,
          "inputs": [
            {
              "indexed": false,
              "internalType": "address",
              "name": "owner",
              "type": "address"
            },
            {
              "indexed": false,
              "internalType": "uint256",
              "name": "amount",
              "type": "uint256"
            }
          ],
          "name": "OwnerWithdrawal",
          "type": "event"
        },
        "0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0": {
          "anonymous": false,
          "inputs": [
            {
              "indexed": true,
              "internalType": "address",
              "name": "previousOwner",
              "type": "address"
            },
            {
              "indexed": true,
              "internalType": "address",
              "name": "newOwner",
              "type": "address"
            }
          ],
          "name": "OwnershipTransferred",
          "type": "event"
        }
      },
      "links": {},
      "address": "0x53838F5ba21565CF90517A83fd6097996e526329",
      "transactionHash": "0x3207dae11ba4f34a8cbfa7947831207ad969058689760a87b2c96c8496db86ef"
    }
  },
  "schemaVersion": "3.3.4",
  "updatedAt": "2021-08-04T02:08:43.433Z",
  "networkType": "ethereum",
  "devdoc": {
    "kind": "dev",
    "methods": {
      "owner()": {
        "details": "Returns the address of the current owner."
      },
      "renounceOwnership()": {
        "details": "Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner."
      },
      "transferOwnership(address)": {
        "details": "Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."
      }
    },
    "version": 1
  },
  "userdoc": {
    "kind": "user",
    "methods": {},
    "version": 1
  }
}